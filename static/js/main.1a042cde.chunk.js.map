{"version":3,"sources":["models/RemoteData.ts","routes.ts","components/menu/config.ts","components/menu/index.tsx","models/Beer.ts","models/BeerCollection.ts","models/ApiErrors/ApiErrors.ts","models/ApiErrors/index.ts","models/Base.ts","models/Cart.ts","models/BreadCrumbs.ts","store.ts","api/ApiClient.ts","models/Order.ts","api/beer.ts","models/BeerDetail.ts","utils/queryStringHeplers.ts","pages/detail/index.tsx","pages/ordering/index.tsx","pages/main/Card/Card.tsx","pages/main/index.tsx","hooks/loadPruductByQueryUrl.ts","pages/cart/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RemoteDataStatuses","routes","main","mainWithCategory","category","details","id","cart","order","ABVBeerTypeConfig","hard","params","abv_gt","label","middle","abv_lt","light","ColorBeerTypeConfig","lightBlonde","ebc_gt","ebc_lt","blonde","gold","amber","copper","darkCopper","veryDarkBrown","black","SubMenu","Menu","BeerMenu","selectedCategory","style","height","defaultSelectedKeys","defaultOpenKeys","mode","icon","MailOutlined","title","Object","keys","map","key","Item","to","SettingOutlined","React","initialBeer","name","tagline","abv","attenuation_level","boil_volume","value","unit","brewers_tips","contributed_by","description","ebc","first_brewed","food_pairing","ibu","image_url","ph","srm","target_fg","target_og","volume","VolumeModel","types","model","number","string","BeerModel","maybeNull","array","selectedCount","optional","actions","self","setCount","count","RemoteDataModel","volatile","loadStatus","initial","views","pending","error","loadSuccess","saveSuccess","setInitial","setPending","setError","setLoadSuccess","setSaveSuccess","BeerCollection","compose","items","named","loadByParams","flow","loadAll","beerApi","get","data","setTimeout","applySnapshot","ApiErrorsStore","addError","ApiErrors","errors","push","clearErrors","clear","BaseModel","setField","cast","CartModel","totalPrice","address","Cart","toJSON","length","getCurrentProduct","find","product","loadByIds","loadById","ids","getByIds","BreadCrumbModel","link","BreadCrumbsModel","replaceEnd","firstItem","lastItems","setOne","BeerCollectionStore","create","CartStore","BreaadCrumbsStore","statusErrors","404","502","503","504","network","default","ApiClient","axios","baseURL","process","timeout","interceptors","response","use","config","skipError","status","request","processServerError","Promise","reject","OrderFields","getById","BeerDetail","addIdToUrl","search","queryArray","split","item","currentId","currentCount","join","decrementCountFromIdFromUrl","removeIdFromUrl","filter","i","isExistIdFromUrl","replace","countByIdFromUrl","current","countIdsFromUrl","observer","useParams","useLocation","StarOutlined","dataPending","loading","active","dataLoadSuccess","className","src","alt","size","column","span","food","PlusOutlined","MinusOutlined","String","DeleteOutlined","PlusCircleOutlined","ShoppingCartOutlined","initialValues","city","street","houseNumber","email","phone","cardNumber","OrderModel","ajv","Ajv","addFormats","schema","properties","type","format","validator","compile","Validator","propertyValidation","prop","obj","ValidatedItem","Title","Typography","Order","productsLength","handleChange","fieldName","e","target","message","level","rules","required","help","placeholder","onChange","Meta","Card","avatar","includes","enterButton","onSearch","beer_name","Array","fill","beer","useLoadPruductByQueryUrl","counts","forEach","param","then","totalCount","reduce","total","Number","getTotalCount","toString","Header","Layout","Content","Footer","Sider","padding","margin","fontSize","width","minHeight","exact","path","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1a042cde.chunk.js","sourcesContent":["import { types, Instance } from 'mobx-state-tree';\n\n/* eslint-disable no-param-reassign */\nexport enum RemoteDataStatuses {\n  initial = 'initial',\n  pending = 'pending',\n  error = 'error',\n  loadSuccess = 'loadSuccess',\n  saveSuccess = 'saveSuccess',\n}\n\nexport const RemoteDataModel = types\n  .model('RemoteDataModel')\n  .volatile(() => ({\n    loadStatus: RemoteDataStatuses.initial,\n  }))\n  .views((self) => ({\n    get dataInitial(): boolean {\n      return self.loadStatus === RemoteDataStatuses.initial;\n    },\n    get dataPending(): boolean {\n      return self.loadStatus === RemoteDataStatuses.pending;\n    },\n    get dataError(): boolean {\n      return self.loadStatus === RemoteDataStatuses.error;\n    },\n    get dataLoadSuccess(): boolean {\n      return self.loadStatus === RemoteDataStatuses.loadSuccess;\n    },\n    get dataSaveSuccess(): boolean {\n      return self.loadStatus === RemoteDataStatuses.saveSuccess;\n    },\n  }))\n  .actions((self) => ({\n    setInitial: () => {\n      self.loadStatus = RemoteDataStatuses.initial;\n    },\n    setPending: () => {\n      self.loadStatus = RemoteDataStatuses.pending;\n    },\n    setError: () => {\n      self.loadStatus = RemoteDataStatuses.error;\n    },\n    setLoadSuccess: () => {\n      self.loadStatus = RemoteDataStatuses.loadSuccess;\n    },\n    setSaveSuccess: () => {\n      self.loadStatus = RemoteDataStatuses.saveSuccess;\n    },\n  }));\n\nexport interface IRemoteDataModel extends Instance<typeof RemoteDataModel> {}\n","const routes = {\n  main: () => '/',\n  mainWithCategory: (category = ':category') => `/${category}`,\n  details: (category = ':category', id = ':id') => `/${category}/details/${id}`,\n  cart: (category = ':category') => `/${category}/cart`,\n  order: (category = ':category') => `/${category}/order`,\n};\n\nexport default routes;\n","import { IBeerListParams } from 'api/types';\n\ntype BeerMenuConfig<T extends string> = Record<T, { params: IBeerListParams; label: string }>;\n\nexport type BeerStrengthType = 'hard' | 'middle' | 'light';\nexport type BeerColoursType =\n  | 'lightBlonde'\n  | 'blonde'\n  | 'gold'\n  | 'amber'\n  | 'copper'\n  | 'darkCopper'\n  | 'veryDarkBrown'\n  | 'black';\n\nexport const ABVBeerTypeConfig: BeerMenuConfig<BeerStrengthType> = {\n  hard: { params: { abv_gt: 10 }, label: 'Hard' },\n  middle: { params: { abv_lt: 10, abv_gt: 5 }, label: 'Middle' },\n  light: { params: { abv_lt: 5 }, label: 'Light' },\n};\n\nexport const ColorBeerTypeConfig: BeerMenuConfig<BeerColoursType> = {\n  lightBlonde: { params: { ebc_gt: 6, ebc_lt: 9 }, label: 'Light Blonde' },\n  blonde: { params: { ebc_gt: 9, ebc_lt: 12 }, label: 'Blonde (yellow)' },\n  gold: { params: { ebc_gt: 12, ebc_lt: 20 }, label: 'Gold' },\n  amber: { params: { ebc_gt: 20, ebc_lt: 30 }, label: 'Amber' },\n  copper: { params: { ebc_gt: 30, ebc_lt: 45 }, label: 'Copper' },\n  darkCopper: { params: { ebc_gt: 45, ebc_lt: 75 }, label: 'Dark Copper / Brown' },\n  veryDarkBrown: { params: { ebc_gt: 75, ebc_lt: 120 }, label: 'Very Dark Brown (transparent)' },\n  black: { params: { ebc_gt: 120 }, label: 'Black (not transparent)' },\n};\n","import * as React from 'react';\n\nimport { Menu } from 'antd';\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport routes from 'routes';\nimport { ABVBeerTypeConfig, BeerColoursType, BeerStrengthType, ColorBeerTypeConfig } from './config';\n\nconst { SubMenu } = Menu;\n\ninterface IBeerMenuProps {\n  selectedCategory: string;\n}\n\nconst BeerMenu: React.FC<IBeerMenuProps> = ({ selectedCategory }) => (\n  <Menu\n    style={{ height: '100%' }}\n    defaultSelectedKeys={[selectedCategory]}\n    defaultOpenKeys={['sub1', 'colours', 'strength']}\n    mode=\"inline\"\n  >\n    <SubMenu key=\"colours\" icon={<MailOutlined />} title=\"Beer Colours\">\n      {Object.keys(ColorBeerTypeConfig).map((key) => (\n        <Menu.Item key={key}>\n          <Link key={key} to={routes.mainWithCategory(key)}>\n            {ColorBeerTypeConfig[key as BeerColoursType].label}\n          </Link>\n        </Menu.Item>\n      ))}\n    </SubMenu>\n    <SubMenu key=\"strength\" icon={<SettingOutlined />} title=\"Strength of Beer\">\n      {Object.keys(ABVBeerTypeConfig).map((key) => (\n        <Menu.Item key={key}>\n          <Link key={key} to={routes.mainWithCategory(key)}>\n            {ABVBeerTypeConfig[key as BeerStrengthType].label}\n          </Link>\n        </Menu.Item>\n      ))}\n    </SubMenu>\n  </Menu>\n);\n\nexport default React.memo(BeerMenu);\n","/* eslint-disable no-param-reassign */\nimport { types, Instance } from 'mobx-state-tree';\n\nexport const initialBeer = {\n  id: 0,\n  name: '',\n  tagline: '',\n  abv: 0,\n  attenuation_level: 0,\n  boil_volume: { value: 0, unit: '' },\n  brewers_tips: '',\n  contributed_by: '',\n  description: '',\n  ebc: null,\n  first_brewed: '',\n  food_pairing: [],\n  ibu: null,\n  image_url: '',\n  ph: null,\n  srm: null,\n  target_fg: 0,\n  target_og: 0,\n  volume: { value: 0, unit: '' },\n};\n\nconst VolumeModel = types.model({\n  value: types.number,\n  unit: types.string,\n});\n\nconst BeerModel = types\n  .model({\n    id: types.number,\n    name: types.string,\n    tagline: types.string,\n    abv: types.number,\n    attenuation_level: types.number,\n    boil_volume: VolumeModel,\n    brewers_tips: types.string,\n    contributed_by: types.string,\n    description: types.string,\n    ebc: types.maybeNull(types.number),\n    first_brewed: types.string,\n    food_pairing: types.array(types.string),\n    ibu: types.maybeNull(types.number),\n    image_url: types.maybeNull(types.string),\n    ph: types.maybeNull(types.number),\n    srm: types.maybeNull(types.number),\n    target_fg: types.number,\n    target_og: types.number,\n    volume: VolumeModel,\n    // selectedCount - select for Cart\n    selectedCount: types.optional(types.number, 1),\n  })\n  .actions((self) => ({\n    setCount(count: number) {\n      self.selectedCount = count || 1;\n    },\n  }));\n\nexport default BeerModel;\n\nexport interface IBeer extends Instance<typeof BeerModel> {}\n","import { types, flow, applySnapshot } from 'mobx-state-tree';\nimport beerApi from 'api/beer';\nimport { ApiErrorsStore } from 'store';\nimport { IBeerListParams } from 'api/types';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst BeerCollection = types\n  .compose(\n    RemoteDataModel,\n    types.model({\n      items: types.array(BeerModel),\n    })\n  )\n  .named('BeerCollection')\n  .actions((self) => {\n    const loadByParams = flow(function* loadAll(params: IBeerListParams = {}) {\n      self.setPending();\n\n      try {\n        const { data } = yield beerApi.get(params);\n\n        setTimeout(() => {\n          applySnapshot(self.items, data);\n          self.setLoadSuccess();\n        }, 400);\n      } catch (e) {\n        self.setError();\n        ApiErrorsStore.addError(e);\n      }\n    });\n\n    return {\n      loadByParams,\n    };\n  });\n\nexport default BeerCollection;\n","/* eslint no-param-reassign: 0 */\nimport { types } from 'mobx-state-tree';\n\nexport const ApiErrors = types\n  .model({\n    errors: types.array(types.string),\n  })\n  .actions((self) => ({\n    addError(error: string) {\n      self.errors.push(error);\n    },\n    clearErrors() {\n      self.errors.clear();\n    },\n  }));\n\nexport default ApiErrors;\n","import { ApiErrors } from './ApiErrors';\n\nexport { ApiErrors };\n\nexport default ApiErrors;\n","/* eslint-disable no-param-reassign */\nimport { types, cast } from 'mobx-state-tree';\n\nconst BaseModel = types.model({} as Record<string, any>).actions((self) => {\n  // TODO: replace any type\n  const setField = (key: string, value: any) => {\n    self[key] = cast(value);\n  };\n\n  return {\n    setField,\n  };\n});\n\nexport default BaseModel;\n","import beerApi from 'api/beer';\nimport { types, flow, applySnapshot } from 'mobx-state-tree';\nimport { ApiErrorsStore } from 'store';\nimport BaseModel from './Base';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst CartModel = types.model({\n  items: types.array(BeerModel),\n  totalPrice: types.maybeNull(types.number),\n  address: types.maybeNull(types.string),\n});\n\nconst Cart = types\n  .compose(BaseModel, RemoteDataModel, CartModel)\n  .named('Cart')\n  .views((self) => ({\n    get count() {\n      return self.items.toJSON().length;\n    },\n  }))\n  .actions((self) => {\n    const getCurrentProduct = (id: number) => self.items.toJSON().find((product) => product.id === id);\n\n    /** ids most be type: 1|2|3|4 */\n    const loadByIds = flow(function* loadById(ids: string) {\n      self.setPending();\n      try {\n        const { data } = yield beerApi.getByIds(ids);\n\n        setTimeout(() => {\n          applySnapshot(self.items, data);\n          self.setLoadSuccess();\n        }, 400);\n      } catch (e) {\n        ApiErrorsStore.addError(e);\n        self.setError();\n      }\n    });\n\n    return { getCurrentProduct, loadByIds };\n  });\n\nexport default Cart;\n","import { applySnapshot, types } from 'mobx-state-tree';\n\nconst BreadCrumbModel = types.model({\n  id: types.string,\n  label: types.string,\n  link: types.string,\n});\n\nconst BreadCrumbsModel = types\n  .model({\n    items: types.array(BreadCrumbModel),\n  })\n  .actions((self) => ({\n    replaceEnd: (items: Array<{ id: string; label: string; link: string }>) => {\n      const firstItem = self.items.toJSON()[0];\n      const lastItems = items;\n\n      applySnapshot(self.items, [firstItem, ...lastItems]);\n    },\n    setOne: () => {\n      const firstItem = self.items.toJSON()[0];\n\n      applySnapshot(self.items, [firstItem]);\n    },\n  }));\n\nexport default BreadCrumbsModel;\n","/* eslint-disable import/no-named-as-default */\nimport BeerCollection from 'models/BeerCollection';\nimport ApiErrors from 'models/ApiErrors';\nimport Cart from 'models/Cart';\nimport BreadCrumbsModel from 'models/BreadCrumbs';\nimport routes from 'routes';\n\nexport const BeerCollectionStore = BeerCollection.create({ items: [] });\nexport const ApiErrorsStore = ApiErrors.create({ errors: [] });\nexport const CartStore = Cart.create({ items: [] });\nexport const BreaadCrumbsStore = BreadCrumbsModel.create({\n  items: [{ id: 'catalog', label: 'Catalog', link: routes.main() }],\n});\n","import axios from 'axios';\n// eslint-disable-next-line import/no-cycle\nimport { ApiErrorsStore } from 'store';\n\ntype IStatusErrors = {\n  [key in string | number]: string;\n};\n\nexport const statusErrors: IStatusErrors = {\n  404: 'Запрашиваемый ресурс не найден',\n  502: 'Сервис недоступен (502)',\n  503: 'Сервис недоступен (503)',\n  504: 'Время ожидания ответа превышено (504)',\n  network: 'Сервер не ответил, вероятно, проблемы с сетью',\n  default: 'Неизвестная сетевая ошибка',\n};\n\n// получение разнородных ошибок от сервисов\nexport const getErrorText = (values: any) => {\n  if (!values.errors) {\n    return JSON.stringify(values);\n  }\n\n  if (!values.errors.error) {\n    return JSON.stringify(values.errors);\n  }\n\n  if (!values.errors.error.message) {\n    return JSON.stringify(values.errors.error);\n  }\n\n  return JSON.stringify(values.errors.error.message);\n};\n\nexport const processServerError = (error: any) => {\n  if (error.response) {\n    // Запрос прошёл, но сервер ответил чем-то отличным от 2хх кода\n    if (statusErrors[error.response.status]) {\n      ApiErrorsStore.addError(`Ошибка: ${statusErrors[error.response.status]}`);\n    }\n  } else if (error.request) {\n    // Запрос отправлен, но ответ не пришёл\n    ApiErrorsStore.addError(statusErrors.network);\n  } else {\n    ApiErrorsStore.addError(statusErrors.default);\n  }\n};\n\nexport const onRejected = (error: any) => {\n  // если в конфиге не отключена обработка ошибок\n  if (!error.config.skipError) {\n    processServerError(error);\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  error.axios = true;\n\n  return Promise.reject(error);\n};\n\nexport const onFulfilled = (response: any) => response;\n\nconst API_URL = process.env.REACT_APP_BEER_API_URL;\n\nconst ApiClient = axios.create({\n  baseURL: API_URL,\n  timeout: 60 * 1000,\n});\n\nApiClient.interceptors.response.use(onFulfilled, onRejected);\n\nexport default ApiClient;\n","import { cast, types } from 'mobx-state-tree';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\nimport BaseModel from './Base';\n\nexport enum OrderFields {\n  city = 'city',\n  street = 'street',\n  houseNumber = 'houseNumber',\n  name = 'name',\n  email = 'email',\n  phone = 'phone',\n  cardNumber = 'cardNumber',\n}\n\nexport const initialValues: Record<OrderFields, any> = {\n  [OrderFields.city]: '',\n  [OrderFields.street]: '',\n  [OrderFields.houseNumber]: 0,\n  [OrderFields.name]: '',\n  [OrderFields.email]: '',\n  [OrderFields.phone]: '',\n  [OrderFields.cardNumber]: '',\n};\n\nconst OrderModel = types.model({\n  [OrderFields.city]: types.maybeNull(types.string),\n  [OrderFields.street]: types.maybeNull(types.string),\n  [OrderFields.houseNumber]: types.maybeNull(types.number),\n  [OrderFields.name]: types.maybeNull(types.string),\n  [OrderFields.email]: types.maybeNull(types.string),\n  [OrderFields.phone]: types.maybeNull(types.string),\n  [OrderFields.cardNumber]: types.maybeNull(types.string),\n});\n\nconst ajv = new Ajv();\naddFormats(ajv);\n\nconst schema = {\n  properties: {\n    [OrderFields.city]: { type: 'string' },\n    [OrderFields.street]: { type: 'string' },\n    [OrderFields.houseNumber]: { type: 'number' },\n    [OrderFields.name]: { type: 'string' },\n    [OrderFields.email]: { format: 'email' },\n    [OrderFields.phone]: { type: 'number' },\n    [OrderFields.cardNumber]: { type: 'number' },\n  },\n};\n\nconst validator = ajv.compile(schema);\n\nconst Validator = types.model('Validator', {} as Record<OrderFields, string | number>).views((self) => ({\n  get isValid() {\n    return validator(self);\n  },\n  propertyValidation(prop: OrderFields) {\n    const obj = {\n      [prop]: cast(self[prop]),\n    };\n\n    validator(obj);\n    return validator.errors;\n  },\n}));\n\nconst ValidatedItem = types.compose(BaseModel, OrderModel, Validator);\n\nexport default ValidatedItem;\n","import ApiClient from './ApiClient';\nimport { IBeerListParams, IBeerDTO } from './types';\n\nconst beerApi = {\n  get: (params: IBeerListParams = {}) => ApiClient.get<{ data: IBeerDTO[] }>(`/beers`, { params }),\n  getById: (id: string) => ApiClient.get<{ data: IBeerDTO }>(`/beers/${id}`),\n  /** ids most be type: 1|2|3|4 */\n  getByIds: (ids: string) => ApiClient.get<{ data: IBeerDTO }>(`/beers/`, { params: { ids } }),\n};\n\nexport default beerApi;\n","import beerApi from 'api/beer';\nimport { types, flow, applySnapshot, Instance } from 'mobx-state-tree';\nimport { ApiErrorsStore } from 'store';\n\nimport BaseModel from './Base';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst BeerDetail = types\n  .compose(BaseModel, RemoteDataModel, BeerModel)\n  .named('Beer')\n  .actions((self) => ({\n    loadById: flow(function* loadById(id: string) {\n      self.setPending();\n      try {\n        const { data } = yield beerApi.getById(id);\n\n        setTimeout(() => {\n          applySnapshot(self, data[0]);\n          self.setLoadSuccess();\n        }, 400);\n      } catch (e) {\n        self.setError();\n        ApiErrorsStore.addError(e);\n      }\n    }),\n  }));\n\nexport default BeerDetail;\n\nexport interface IBeerDetail extends Instance<typeof BeerDetail> {}\n","export const addIdToUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n  if (!queryArray.length) {\n    return `?${id}=1`;\n  }\n\n  if (queryArray.length) {\n    const currentItem = queryArray.map((item) => item.split('=')).find((item) => item[0] === id);\n\n    if (currentItem) {\n      return `?${queryArray\n        .map((item) => {\n          const [currentId, currentCount] = item.split('=');\n          if (currentId === id) {\n            return `${currentId}=${+currentCount + 1}`;\n          }\n\n          return item;\n        })\n        .join('&')}`;\n    }\n\n    return `${search}&${id}=1`;\n  }\n\n  return '';\n};\n\nexport const decrementCountFromIdFromUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n\n  const currentItem = queryArray.map((item) => item.split('=')).find((item) => item[0] === id);\n\n  if (currentItem) {\n    return `?${queryArray\n      .map((item) => {\n        const [currentId, currentCount] = item.split('=');\n        if (currentId === id) {\n          return `${currentId}=${+currentCount === 1 ? 1 : +currentCount - 1}`;\n        }\n\n        return item;\n      })\n      .join('&')}`;\n  }\n\n  return '';\n};\n\nexport const removeIdFromUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n  if (id) {\n    return queryArray.length\n      ? queryArray\n          .map((item) => item.split('='))\n          .filter((item) => item[0] !== id)\n          .map((item, i) => `${i ? '&' : '?'}${item[0]}=${item[1]}`)\n          .join('')\n      : '';\n  }\n\n  return search;\n};\n\nexport const isExistIdFromUrl = (search: string, id: string): boolean =>\n  !!search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .find((item) => item[0] === id);\n\nexport const countByIdFromUrl = (search: string, id: string): number => {\n  const current = search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .find((item) => item[0] === id);\n\n  return current ? +current[1] : 0;\n};\n\nexport const countIdsFromUrl = (search: string): number => (search ? search.replace('?', '').split('&').length : 0);\n\nexport const getTotalCount = (search: string) =>\n  search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .reduce((total, count) => total + Number(count[1]), 0);\n","import * as React from 'react';\n\nimport { Button, Card, Descriptions, Skeleton, Typography } from 'antd';\nimport {\n  DeleteOutlined,\n  MinusOutlined,\n  PlusCircleOutlined,\n  PlusOutlined,\n  ShoppingCartOutlined,\n  StarOutlined,\n} from '@ant-design/icons';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport BeerDetail from 'models/BeerDetail';\nimport { initialBeer } from 'models/Beer';\n\nimport './styles.css';\nimport routes from 'routes';\nimport {\n  addIdToUrl,\n  countByIdFromUrl,\n  decrementCountFromIdFromUrl,\n  isExistIdFromUrl,\n  removeIdFromUrl,\n} from 'utils/queryStringHeplers';\nimport { BreaadCrumbsStore } from 'store';\n\nconst BeerDetails: React.FC<{}> = () => {\n  const { category, id } = useParams<{ category: string; id: string }>();\n  const { search } = useLocation();\n  const item = React.useRef(BeerDetail.create({ ...initialBeer })).current;\n\n  React.useEffect(() => {\n    if (id) {\n      item.loadById(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  React.useEffect(() => {\n    BreaadCrumbsStore.replaceEnd([{ id, label: item.name, link: routes.details(category, id) + search }]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [item.name]);\n\n  return (\n    // eslint-disable-next-line react/jsx-key\n    <Card title={item.name} actions={[<StarOutlined />]}>\n      {item.dataPending && (\n        <>\n          <Skeleton loading active />\n          <Skeleton loading active />\n        </>\n      )}\n      {item.dataLoadSuccess && (\n        <div className=\"details-container\">\n          <img className=\"details-beer-img\" src={item.image_url || ''} alt={item.name} />\n          <div>\n            <Descriptions className=\"beer-card_description\" title=\"Details\" size=\"middle\" column={2}>\n              <Descriptions.Item label=\"Description\" span={2}>\n                {item.description}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Brewers tips\" span={2}>\n                {item.brewers_tips}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Contributed by\" span={1}>\n                {item.contributed_by}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"First brewed\">{item.first_brewed}</Descriptions.Item>\n              <Descriptions.Item label=\"Food pairing\">\n                {item.food_pairing.map((food: string, i) => (\n                  <span key={food} className=\"food-span\">\n                    {food}\n                    {item.food_pairing.length === i + 1 ? '' : ', '}\n                  </span>\n                ))}\n              </Descriptions.Item>\n              {/** TODO need add ingredients */}\n            </Descriptions>\n            <div className=\"actions-container\">\n              <Link to={routes.details(category, id) + addIdToUrl(search, id)}>\n                <Button icon={<PlusOutlined />} />\n              </Link>\n              <Link to={routes.details(category, id) + decrementCountFromIdFromUrl(search, id)}>\n                <Button icon={<MinusOutlined />} />\n              </Link>\n              <Typography className=\"actions-container_item\">{countByIdFromUrl(search, id)}</Typography>\n              {isExistIdFromUrl(search, id) ? (\n                <Link to={routes.details(category, id) + removeIdFromUrl(search, String(id))}>\n                  <Button className=\"actions-container_item\" icon={<DeleteOutlined />}>\n                    Remove from Card\n                  </Button>\n                </Link>\n              ) : (\n                <Link to={routes.details(category, id) + addIdToUrl(search, String(id))}>\n                  <Button className=\"actions-container_item\" icon={<PlusCircleOutlined />}>\n                    Add to Card\n                  </Button>\n                </Link>\n              )}\n              <Link to={routes.cart(category) + search}>\n                <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />}>\n                  Go to Cart\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(BeerDetails);\n","import { Form, Alert, Button, Card, Input, Typography } from 'antd';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport routes from 'routes';\nimport Order, { initialValues, OrderFields } from 'models/Order';\nimport { countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport './styles.css';\nimport { BreaadCrumbsStore } from 'store';\n\nconst { Title } = Typography;\n\nconst Ordering: React.FC<{}> = () => {\n  const { search } = useLocation();\n  const { category } = useParams<{ category: string }>();\n\n  const item = React.useRef(Order.create(initialValues)).current;\n  const productsLength = countIdsFromUrl(search);\n\n  React.useEffect(() => {\n    BreaadCrumbsStore.replaceEnd([\n      {\n        id: 'cart',\n        label: productsLength ? `Selected ${productsLength} products in cart` : 'Empty Cart',\n        link: routes.cart(category) + search,\n      },\n      { id: 'order', label: 'Order', link: routes.order(category) + search },\n    ]);\n  }, [productsLength, search, category]);\n\n  const handleChange = (fieldName: OrderFields): React.ChangeEventHandler<HTMLInputElement> => (e) => {\n    item.setField(fieldName, e.target.value);\n  };\n\n  return (\n    <Card title=\"Ordering\" className=\"beer-order\">\n      {!productsLength && <Alert message=\"Products not found\" type=\"info\" />}\n      {productsLength && (\n        <>\n          <div className=\"delivery-information\">\n            <Title level={4}>Delivery info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.city}\n                label=\"City/Town\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.city) && 'Неверный формат'}\n              >\n                <Input placeholder=\"Prague\" value={item.city || ''} onChange={handleChange(OrderFields.city)} />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.street}\n                label=\"Street\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.street) && 'Неверный формат'}\n              >\n                <Input placeholder=\"Parizhska\" value={item.street || ''} onChange={handleChange(OrderFields.street)} />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.houseNumber}\n                label=\"House number\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.houseNumber) && 'Неверный формат'}\n              >\n                <Input\n                  placeholder=\"1\"\n                  value={item.houseNumber || ''}\n                  onChange={handleChange(OrderFields.houseNumber)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"contact-information\">\n            <Title level={4}>Contact info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.name}\n                label=\"Name\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.name) && 'Неверный формат'}\n              >\n                <Input value={item.name || ''} onChange={handleChange(OrderFields.name)} />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.email}\n                label=\"Email\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.email) && 'Неверный формат email'}\n              >\n                <Input\n                  placeholder=\"example@gmai.com\"\n                  value={item.email || ''}\n                  onChange={handleChange(OrderFields.email)}\n                />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.phone}\n                label=\"Phone\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.phone) && 'Неверный формат номера телефона'}\n              >\n                <Input\n                  placeholder=\"+7-999-000-00-00\"\n                  value={item.phone || ''}\n                  onChange={handleChange(OrderFields.phone)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"contact-information\">\n            <Title level={4}>Payment info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.cardNumber}\n                label=\"card numder\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.cardNumber) && 'Неверный формат карты'}\n              >\n                <Input\n                  placeholder=\"example@gmai.com\"\n                  value={item.city || ''}\n                  onChange={handleChange(OrderFields.cardNumber)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"cart_button-container\">\n            <Link to={routes.order(category)}>\n              <Button type=\"primary\">Buy $$$</Button>\n            </Link>\n          </div>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(Ordering);\n","/* eslint-disable react/jsx-key */\nimport * as React from 'react';\n\nimport { Button, Card } from 'antd';\nimport { PlusCircleOutlined, ShoppingCartOutlined, StarOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\nimport routes from 'routes';\n\nimport './styles.css';\nimport { observer } from 'mobx-react';\nimport { IBeer } from 'models/Beer';\nimport { addIdToUrl } from 'utils/queryStringHeplers';\n\ninterface IBeerCardProps {\n  category: string;\n  data: IBeer;\n}\n\nconst { Meta } = Card;\n\nconst BeerCard: React.FC<IBeerCardProps> = ({ category, data }) => {\n  const { search } = useLocation();\n\n  return (\n    <Card\n      title={data.name}\n      actions={[\n        <Button icon={<StarOutlined />} />,\n\n        <Link to={routes.details(category, String(data.id)) + search}>\n          <Button>Details...</Button>\n        </Link>,\n        <Link to={routes.mainWithCategory(category) + addIdToUrl(search, String(data.id))}>\n          <Button\n            className=\"beer_add-to-cart\"\n            icon={\n              <>\n                <PlusCircleOutlined /> 1 in\n                <ShoppingCartOutlined />\n              </>\n            }\n          />\n        </Link>,\n        <Link to={routes.cart() + search}>\n          <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />} />\n        </Link>,\n      ]}\n    >\n      <Meta\n        avatar={<img className=\"beer-img\" src={data.image_url || ''} alt={data.name} />}\n        title={data.name}\n        description={data.description}\n      />\n    </Card>\n  );\n};\n\nexport default observer(BeerCard);\n","import * as React from 'react';\n\nimport Search from 'antd/lib/input/Search';\nimport { Button, Card, Col, Row, Skeleton } from 'antd';\nimport { observer } from 'mobx-react';\nimport { BeerCollectionStore, BreaadCrumbsStore } from 'store';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport routes from 'routes';\nimport { countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport { ABVBeerTypeConfig, BeerStrengthType, ColorBeerTypeConfig, BeerColoursType } from 'components/menu/config';\nimport BeerCard from './Card/Card';\nimport './styles.css';\n\nconst MainPage = () => {\n  const { search } = useLocation();\n  const { category } = useParams<{ category: string }>();\n\n  React.useEffect(() => {\n    if (category) {\n      BeerCollectionStore.loadByParams(\n        category.includes('strength')\n          ? ABVBeerTypeConfig[category as BeerStrengthType].params\n          : ColorBeerTypeConfig[category as BeerColoursType].params\n      );\n    }\n  }, [category]);\n\n  React.useEffect(() => {\n    BreaadCrumbsStore.setOne();\n    BeerCollectionStore.loadByParams();\n  }, []);\n\n  const handleSearch = (value: string) => {\n    BeerCollectionStore.loadByParams({ beer_name: value });\n  };\n\n  return (\n    <div className=\"main-page_container\">\n      <div className=\"main-page_header\">\n        <div className=\"main-page_search_container\">\n          <Search placeholder=\"please input text\" enterButton=\"Search\" size=\"large\" onSearch={handleSearch} />\n        </div>\n        {!!countIdsFromUrl(search) && (\n          <Link to={routes.cart() + search}>\n            <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />}>\n              In Cart {countIdsFromUrl(search)} items\n            </Button>\n          </Link>\n        )}\n      </div>\n      <Row>\n        {BeerCollectionStore.dataPending &&\n          new Array(12).fill({}).map((item, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Col key={i} className=\"main-page_beer-list_col\" span={8}>\n              <Card>\n                <Skeleton className=\"catalog-item-sceleton\" loading avatar active />\n              </Card>\n            </Col>\n          ))}\n        {BeerCollectionStore.dataLoadSuccess &&\n          BeerCollectionStore.items.toJSON().map((beer) => (\n            <Col key={beer.id} className=\"main-page_beer-list_col\" span={8}>\n              <BeerCard category={category} data={beer} />\n            </Col>\n          ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default observer(MainPage);\n","import * as React from 'react';\n\nimport { CartStore } from 'store';\n\nconst useLoadPruductByQueryUrl = (search: string) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  React.useEffect(() => {\n    const queryArray = (search && search.split('?')[1].split('&')) || [];\n\n    let ids: string = '';\n    const counts: number[] = [];\n    queryArray.forEach((param, i) => {\n      const [key, value] = param.split('=');\n      ids += `${key}${i < queryArray.length ? '|' : ''}`;\n      counts.push(+value);\n    });\n\n    CartStore.loadByIds(ids).then(() => {\n      CartStore.items.forEach((item, i) => {\n        item.setCount(counts[i]);\n      });\n    });\n  }, [search]);\n};\n\nexport default useLoadPruductByQueryUrl;\n","import * as React from 'react';\n\nimport { Alert, Button, Card, Descriptions, Skeleton, Typography } from 'antd';\nimport useLoadPruductByQueryUrl from 'hooks/loadPruductByQueryUrl';\nimport { observer } from 'mobx-react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport routes from 'routes';\nimport { BreaadCrumbsStore, CartStore } from 'store';\nimport { countByIdFromUrl, getTotalCount, removeIdFromUrl, countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport './styles.css';\n\nconst { Title } = Typography;\n\nconst DEFAULT_PRICE = 3.5;\n\nconst BeerCart: React.FC<{}> = () => {\n  const { category } = useParams<{ category: string }>();\n  const { search } = useLocation();\n\n  useLoadPruductByQueryUrl(search);\n\n  const totalCount = getTotalCount(search);\n\n  const productsLength = countIdsFromUrl(search);\n\n  React.useEffect(() => {\n    BreaadCrumbsStore.replaceEnd([{ id: 'cart', label: 'Cart', link: routes.cart(category) + search }]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  return (\n    <Card title=\"Cart\" className=\"beer-cart\">\n      {CartStore.dataPending && (\n        <>\n          <Skeleton loading active />\n          <Skeleton loading active />\n          <Skeleton loading active />\n        </>\n      )}\n      {CartStore.dataLoadSuccess && !productsLength && <Alert message=\"Empty Cart\" type=\"info\" />}\n      {CartStore.dataLoadSuccess && !!productsLength && (\n        <>\n          {CartStore.items.map((item, i) => (\n            <React.Fragment key={item.id}>\n              <div className=\"card_item-container\">\n                <img className=\"cart-beer-img\" src={item.image_url || ''} alt={item.name} />\n                <div>\n                  <Descriptions\n                    className=\"cart_item_description\"\n                    title={`${i + 1}. ${item.name}`}\n                    size=\"middle\"\n                    column={2}\n                  >\n                    <Descriptions.Item label=\"Description\" span={2}>\n                      {item.description}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"count\">{countByIdFromUrl(search, String(item.id))}</Descriptions.Item>\n                    <Descriptions.Item label=\"price\">\n                      {DEFAULT_PRICE * countByIdFromUrl(search, String(item.id))} $\n                    </Descriptions.Item>\n                  </Descriptions>\n                  <div className=\"cart_item_actions\">\n                    <Link to={routes.details(category, item.id.toString()) + search}>\n                      <Button className=\"cart_item_first_btn\">Details</Button>\n                    </Link>\n                    <Link to={routes.cart(category) + removeIdFromUrl(search, String(item.id))}>\n                      <Button>Remove</Button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </React.Fragment>\n          ))}\n          <Title level={4}>TOTAL: {totalCount * DEFAULT_PRICE} $</Title>\n          {CartStore.items.toJSON().length && (\n            <div className=\"cart_button-container\">\n              <Link to={routes.order(category) + search}>\n                <Button type=\"primary\">Go to ordering</Button>\n              </Link>\n            </div>\n          )}\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(BeerCart);\n","import React from 'react';\n\nimport { Breadcrumb, Layout } from 'antd';\n\nimport BeerMenu from 'components/menu';\nimport BeerDetails from 'pages/detail';\nimport Ordering from 'pages/ordering';\nimport MainPage from 'pages/main';\n\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport routes from 'routes';\nimport BeerCart from 'pages/cart';\n\nimport './App.css';\nimport { BreaadCrumbsStore } from 'store';\nimport { observer } from 'mobx-react';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App: React.FC = () => (\n  <Layout>\n    <Header className=\"header\">\n      <div className=\"logo\" />\n      Beans Love Beers\n    </Header>\n    <Content style={{ padding: '0 50px' }}>\n      <Breadcrumb style={{ margin: '16px 0', fontSize: 18 }}>\n        {BreaadCrumbsStore.items.toJSON().map((item) => (\n          <Breadcrumb.Item key={item.id}>\n            <Link to={item.link}>{item.label}</Link>\n          </Breadcrumb.Item>\n        ))}\n      </Breadcrumb>\n      <Layout className=\"site-layout-background\">\n        <Sider className=\"site-layout-background\" width={200}>\n          <BeerMenu selectedCategory=\"gold\" />\n        </Sider>\n        <Content style={{ padding: '0 24px', minHeight: 280 }}>\n          <Switch>\n            <Route exact path={routes.mainWithCategory()}>\n              <MainPage />\n            </Route>\n            <Route exact path={routes.main()}>\n              <MainPage />\n            </Route>\n            <Route path={routes.details()}>\n              <BeerDetails />\n            </Route>\n            <Route path={routes.cart()}>\n              <BeerCart />\n            </Route>\n            <Route path={routes.order()}>\n              <Ordering />\n            </Route>\n          </Switch>\n        </Content>\n      </Layout>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Beer Catalog developed by Igor Bezdeneznhykh</Footer>\n  </Layout>\n);\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}