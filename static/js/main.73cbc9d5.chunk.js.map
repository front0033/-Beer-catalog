{"version":3,"sources":["models/RemoteData.ts","routes.ts","components/menu/config.ts","components/menu/index.tsx","models/Beer.ts","models/BeerCollection.ts","models/ApiErrors/ApiErrors.ts","models/ApiErrors/index.ts","models/Base.ts","models/Cart.ts","models/BreadCrumbs.ts","store.ts","api/ApiClient.ts","models/Order.ts","api/beer.ts","models/BeerDetail.ts","utils/queryStringHeplers.ts","pages/detail/index.tsx","models/Validation.ts","pages/ordering/index.tsx","pages/main/Card/Card.tsx","pages/main/index.tsx","hooks/loadPruductByQueryUrl.ts","pages/cart/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RemoteDataStatuses","routes","main","mainWithCategory","category","details","id","cart","order","ABVBeerTypeConfig","hard","params","abv_gt","label","middle","abv_lt","light","ColorBeerTypeConfig","lightBlonde","ebc_gt","ebc_lt","blonde","gold","amber","copper","darkCopper","veryDarkBrown","black","getLabelBySubUrl","SubMenu","Menu","BeerMenu","selectedCategory","search","useLocation","style","height","defaultSelectedKeys","defaultOpenKeys","mode","icon","MailOutlined","title","Object","keys","map","key","Item","to","SettingOutlined","React","initialBeer","name","tagline","abv","attenuation_level","boil_volume","value","unit","brewers_tips","contributed_by","description","ebc","first_brewed","food_pairing","ibu","image_url","ph","srm","target_fg","target_og","volume","VolumeModel","types","model","number","string","BeerModel","maybeNull","array","selectedCount","optional","actions","self","setCount","count","RemoteDataModel","volatile","loadStatus","initial","views","pending","error","loadSuccess","saveSuccess","setInitial","setPending","setError","setLoadSuccess","setSaveSuccess","BeerCollection","compose","items","named","loadByParams","flow","loadAll","beerApi","get","data","setTimeout","applySnapshot","ApiErrorsStore","addError","ApiErrors","errors","push","clearErrors","clear","BaseModel","setField","cast","CartModel","totalPrice","address","Cart","toJSON","length","getCurrentProduct","find","product","loadByIds","loadById","ids","getByIds","BreadCrumbModel","url","BreadCrumbsModel","set","BeerCollectionStore","create","CartStore","BreaadCrumbsStore","statusErrors","404","502","503","504","network","default","ApiClient","axios","baseURL","process","timeout","interceptors","response","use","config","skipError","status","request","processServerError","Promise","reject","OrderFields","getById","BeerDetail","addIdToUrl","queryArray","split","item","currentId","currentCount","join","decrementCountFromIdFromUrl","removeIdFromUrl","filter","i","isExistIdFromUrl","replace","countByIdFromUrl","current","countIdsFromUrl","observer","useParams","StarOutlined","dataPending","loading","active","dataLoadSuccess","className","src","alt","size","column","span","food","PlusOutlined","MinusOutlined","String","DeleteOutlined","PlusCircleOutlined","ShoppingCartOutlined","regexpValidation","regexp","message","test","toString","required","ValidationModel","validation","validateField","reduce","result","check","validate","isValid","forEach","resetErrors","initialValues","city","street","houseNumber","email","phone","cardNumber","OrderModel","ValidatedItem","Title","Typography","Order","productsLength","handleChange","fieldName","e","target","handleBlure","type","level","help","validateStatus","placeholder","onChange","onBlur","validateTrigger","onClick","alert","JSON","stringify","Meta","Card","avatar","enterButton","onSearch","beer_name","Array","fill","beer","useLoadPruductByQueryUrl","counts","param","then","totalCount","total","Number","getTotalCount","Header","Layout","Content","Footer","Sider","padding","margin","fontSize","width","minHeight","exact","path","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73cbc9d5.chunk.js","sourcesContent":["import { types, Instance } from 'mobx-state-tree';\n\n/* eslint-disable no-param-reassign */\nexport enum RemoteDataStatuses {\n  initial = 'initial',\n  pending = 'pending',\n  error = 'error',\n  loadSuccess = 'loadSuccess',\n  saveSuccess = 'saveSuccess',\n}\n\nexport const RemoteDataModel = types\n  .model('RemoteDataModel')\n  .volatile(() => ({\n    loadStatus: RemoteDataStatuses.initial,\n  }))\n  .views((self) => ({\n    get dataInitial(): boolean {\n      return self.loadStatus === RemoteDataStatuses.initial;\n    },\n    get dataPending(): boolean {\n      return self.loadStatus === RemoteDataStatuses.pending;\n    },\n    get dataError(): boolean {\n      return self.loadStatus === RemoteDataStatuses.error;\n    },\n    get dataLoadSuccess(): boolean {\n      return self.loadStatus === RemoteDataStatuses.loadSuccess;\n    },\n    get dataSaveSuccess(): boolean {\n      return self.loadStatus === RemoteDataStatuses.saveSuccess;\n    },\n  }))\n  .actions((self) => ({\n    setInitial: () => {\n      self.loadStatus = RemoteDataStatuses.initial;\n    },\n    setPending: () => {\n      self.loadStatus = RemoteDataStatuses.pending;\n    },\n    setError: () => {\n      self.loadStatus = RemoteDataStatuses.error;\n    },\n    setLoadSuccess: () => {\n      self.loadStatus = RemoteDataStatuses.loadSuccess;\n    },\n    setSaveSuccess: () => {\n      self.loadStatus = RemoteDataStatuses.saveSuccess;\n    },\n  }));\n\nexport interface IRemoteDataModel extends Instance<typeof RemoteDataModel> {}\n","const routes = {\n  main: () => '/',\n  mainWithCategory: (category = ':category') => `/${category}`,\n  details: (category = ':category', id = ':id') => `/${category}/details/${id}`,\n  cart: (category = ':category') => `/${category}/cart`,\n  order: (category = ':category') => `/${category}/order`,\n};\n\nexport default routes;\n","import { TBeerListParams } from 'api/types';\n\ntype BeerMenuConfig<T extends string> = Record<T, { params: TBeerListParams; label: string }>;\n\nexport type BeerStrengthType = 'hard' | 'middle' | 'light';\nexport type BeerColoursType =\n  | 'lightBlonde'\n  | 'blonde'\n  | 'gold'\n  | 'amber'\n  | 'copper'\n  | 'darkCopper'\n  | 'veryDarkBrown'\n  | 'black';\n\nexport const ABVBeerTypeConfig: BeerMenuConfig<BeerStrengthType> = {\n  hard: { params: { abv_gt: 10 }, label: 'Hard' },\n  middle: { params: { abv_lt: 10, abv_gt: 5 }, label: 'Middle' },\n  light: { params: { abv_lt: 5 }, label: 'Light' },\n};\n\nexport const ColorBeerTypeConfig: BeerMenuConfig<BeerColoursType> = {\n  lightBlonde: { params: { ebc_gt: 6, ebc_lt: 9 }, label: 'Light Blonde' },\n  blonde: { params: { ebc_gt: 9, ebc_lt: 12 }, label: 'Blonde (yellow)' },\n  gold: { params: { ebc_gt: 12, ebc_lt: 20 }, label: 'Gold' },\n  amber: { params: { ebc_gt: 20, ebc_lt: 30 }, label: 'Amber' },\n  copper: { params: { ebc_gt: 30, ebc_lt: 45 }, label: 'Copper' },\n  darkCopper: { params: { ebc_gt: 45, ebc_lt: 75 }, label: 'Dark Copper / Brown' },\n  veryDarkBrown: { params: { ebc_gt: 75, ebc_lt: 120 }, label: 'Very Dark Brown (transparent)' },\n  black: { params: { ebc_gt: 120 }, label: 'Black (not transparent)' },\n};\n\nexport const getLabelBySubUrl = (id: string) =>\n  (ABVBeerTypeConfig[id as BeerStrengthType] || ColorBeerTypeConfig[id as BeerColoursType]).label;\n","import * as React from 'react';\n\nimport { Menu } from 'antd';\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\nimport routes from 'routes';\nimport { ABVBeerTypeConfig, BeerColoursType, BeerStrengthType, ColorBeerTypeConfig } from './config';\n\nconst { SubMenu } = Menu;\n\ninterface IBeerMenuProps {\n  selectedCategory: string;\n}\n\nconst BeerMenu: React.FC<IBeerMenuProps> = ({ selectedCategory }) => {\n  const { search } = useLocation();\n  return (\n    <Menu\n      style={{ height: '100%' }}\n      defaultSelectedKeys={[selectedCategory]}\n      defaultOpenKeys={['sub1', 'colours', 'strength']}\n      mode=\"inline\"\n    >\n      <SubMenu key=\"colours\" icon={<MailOutlined />} title=\"Beer Colours\">\n        {Object.keys(ColorBeerTypeConfig).map((key) => (\n          <Menu.Item key={key}>\n            <Link key={key} to={routes.mainWithCategory(key) + search}>\n              {ColorBeerTypeConfig[key as BeerColoursType].label}\n            </Link>\n          </Menu.Item>\n        ))}\n      </SubMenu>\n      <SubMenu key=\"strength\" icon={<SettingOutlined />} title=\"Strength of Beer\">\n        {Object.keys(ABVBeerTypeConfig).map((key) => (\n          <Menu.Item key={key}>\n            <Link key={key} to={routes.mainWithCategory(key) + search}>\n              {ABVBeerTypeConfig[key as BeerStrengthType].label}\n            </Link>\n          </Menu.Item>\n        ))}\n      </SubMenu>\n    </Menu>\n  );\n};\n\nexport default React.memo(BeerMenu);\n","/* eslint-disable no-param-reassign */\nimport { types, Instance } from 'mobx-state-tree';\n\nexport const initialBeer = {\n  id: 0,\n  name: '',\n  tagline: '',\n  abv: 0,\n  attenuation_level: 0,\n  boil_volume: { value: 0, unit: '' },\n  brewers_tips: '',\n  contributed_by: '',\n  description: '',\n  ebc: null,\n  first_brewed: '',\n  food_pairing: [],\n  ibu: null,\n  image_url: '',\n  ph: null,\n  srm: null,\n  target_fg: 0,\n  target_og: 0,\n  volume: { value: 0, unit: '' },\n};\n\nconst VolumeModel = types.model({\n  value: types.number,\n  unit: types.string,\n});\n\nconst BeerModel = types\n  .model({\n    id: types.number,\n    name: types.string,\n    tagline: types.string,\n    abv: types.number,\n    attenuation_level: types.number,\n    boil_volume: VolumeModel,\n    brewers_tips: types.string,\n    contributed_by: types.string,\n    description: types.string,\n    ebc: types.maybeNull(types.number),\n    first_brewed: types.string,\n    food_pairing: types.array(types.string),\n    ibu: types.maybeNull(types.number),\n    image_url: types.maybeNull(types.string),\n    ph: types.maybeNull(types.number),\n    srm: types.maybeNull(types.number),\n    target_fg: types.number,\n    target_og: types.number,\n    volume: VolumeModel,\n    // selectedCount - select for Cart\n    selectedCount: types.optional(types.number, 1),\n  })\n  .actions((self) => ({\n    setCount(count: number) {\n      self.selectedCount = count || 1;\n    },\n  }));\n\nexport default BeerModel;\n\nexport interface IBeer extends Instance<typeof BeerModel> {}\n","import { types, flow, applySnapshot } from 'mobx-state-tree';\nimport beerApi from 'api/beer';\nimport { ApiErrorsStore } from 'store';\nimport { TBeerListParams } from 'api/types';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst BeerCollection = types\n  .compose(\n    RemoteDataModel,\n    types.model({\n      items: types.array(BeerModel),\n    })\n  )\n  .named('BeerCollection')\n  .actions((self) => {\n    const loadByParams = flow(function* loadAll(params: TBeerListParams = {}) {\n      self.setPending();\n\n      try {\n        const { data } = yield beerApi.get(params);\n\n        setTimeout(() => {\n          applySnapshot(self.items, data);\n          self.setLoadSuccess();\n        }, 400);\n      } catch (e) {\n        self.setError();\n        ApiErrorsStore.addError(e);\n      }\n    });\n\n    return {\n      loadByParams,\n    };\n  });\n\nexport default BeerCollection;\n","/* eslint no-param-reassign: 0 */\nimport { types } from 'mobx-state-tree';\n\nexport const ApiErrors = types\n  .model({\n    errors: types.array(types.string),\n  })\n  .actions((self) => ({\n    addError(error: string) {\n      self.errors.push(error);\n    },\n    clearErrors() {\n      self.errors.clear();\n    },\n  }));\n\nexport default ApiErrors;\n","import { ApiErrors } from './ApiErrors';\n\nexport { ApiErrors };\n\nexport default ApiErrors;\n","/* eslint-disable no-param-reassign */\nimport { types, cast } from 'mobx-state-tree';\n\nconst BaseModel = types.model({} as Record<string, any>).actions((self) => {\n  // TODO: replace any type\n  const setField = (key: string, value: any) => {\n    self[key] = cast(value);\n  };\n\n  return {\n    setField,\n  };\n});\n\nexport default BaseModel;\n","import beerApi from 'api/beer';\nimport { types, flow, applySnapshot } from 'mobx-state-tree';\nimport { ApiErrorsStore } from 'store';\nimport BaseModel from './Base';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst CartModel = types.model({\n  items: types.array(BeerModel),\n  totalPrice: types.maybeNull(types.number),\n  address: types.maybeNull(types.string),\n});\n\nconst Cart = types\n  .compose(BaseModel, RemoteDataModel, CartModel)\n  .named('Cart')\n  .views((self) => ({\n    get count() {\n      return self.items.toJSON().length;\n    },\n  }))\n  .actions((self) => {\n    const getCurrentProduct = (id: number) => self.items.toJSON().find((product) => product.id === id);\n\n    /** ids most be type: 1|2|3|4 */\n    const loadByIds = flow(function* loadById(ids: string) {\n      self.setPending();\n      try {\n        const { data } = yield beerApi.getByIds(ids);\n\n        setTimeout(() => {\n          applySnapshot(self.items, data);\n          self.setLoadSuccess();\n        }, 400);\n      } catch (e) {\n        ApiErrorsStore.addError(e);\n        self.setError();\n      }\n    });\n\n    return { getCurrentProduct, loadByIds };\n  });\n\nexport default Cart;\n","import { applySnapshot, types } from 'mobx-state-tree';\n\nconst BreadCrumbModel = types.model({\n  id: types.string,\n  label: types.string,\n  url: types.string,\n});\n\nconst BreadCrumbsModel = types\n  .model({\n    items: types.array(BreadCrumbModel),\n  })\n  .actions((self) => ({\n    set: (items: Array<{ id: string; label: string; url: string }>) => {\n      applySnapshot(self.items, items);\n    },\n  }));\n\nexport default BreadCrumbsModel;\n","/* eslint-disable import/no-named-as-default */\nimport BeerCollection from 'models/BeerCollection';\nimport ApiErrors from 'models/ApiErrors';\nimport Cart from 'models/Cart';\nimport BreadCrumbsModel from 'models/BreadCrumbs';\nimport routes from 'routes';\n\nexport const BeerCollectionStore = BeerCollection.create({ items: [] });\nexport const ApiErrorsStore = ApiErrors.create({ errors: [] });\nexport const CartStore = Cart.create({ items: [] });\nexport const BreaadCrumbsStore = BreadCrumbsModel.create({\n  items: [{ id: 'catalog', label: 'Catalog', url: routes.main() }],\n});\n","import axios from 'axios';\n// eslint-disable-next-line import/no-cycle\nimport { ApiErrorsStore } from 'store';\n\ntype IStatusErrors = {\n  [key in string | number]: string;\n};\n\nexport const statusErrors: IStatusErrors = {\n  404: 'Запрашиваемый ресурс не найден',\n  502: 'Сервис недоступен (502)',\n  503: 'Сервис недоступен (503)',\n  504: 'Время ожидания ответа превышено (504)',\n  network: 'Сервер не ответил, вероятно, проблемы с сетью',\n  default: 'Неизвестная сетевая ошибка',\n};\n\n// получение разнородных ошибок от сервисов\nexport const getErrorText = (values: any) => {\n  if (!values.errors) {\n    return JSON.stringify(values);\n  }\n\n  if (!values.errors.error) {\n    return JSON.stringify(values.errors);\n  }\n\n  if (!values.errors.error.message) {\n    return JSON.stringify(values.errors.error);\n  }\n\n  return JSON.stringify(values.errors.error.message);\n};\n\nexport const processServerError = (error: any) => {\n  if (error.response) {\n    // Запрос прошёл, но сервер ответил чем-то отличным от 2хх кода\n    if (statusErrors[error.response.status]) {\n      ApiErrorsStore.addError(`Ошибка: ${statusErrors[error.response.status]}`);\n    }\n  } else if (error.request) {\n    // Запрос отправлен, но ответ не пришёл\n    ApiErrorsStore.addError(statusErrors.network);\n  } else {\n    ApiErrorsStore.addError(statusErrors.default);\n  }\n};\n\nexport const onRejected = (error: any) => {\n  // если в конфиге не отключена обработка ошибок\n  if (!error.config.skipError) {\n    processServerError(error);\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  error.axios = true;\n\n  return Promise.reject(error);\n};\n\nexport const onFulfilled = (response: any) => response;\n\nconst API_URL = process.env.REACT_APP_BEER_API_URL;\n\nconst ApiClient = axios.create({\n  baseURL: API_URL,\n  timeout: 60 * 1000,\n});\n\nApiClient.interceptors.response.use(onFulfilled, onRejected);\n\nexport default ApiClient;\n","import { types } from 'mobx-state-tree';\nimport BaseModel from './Base';\nimport ValidationModel, { MUST_BE_EMAIL, MUST_BE_PHONE, regexpValidation, required } from './Validation';\n\nexport enum OrderFields {\n  city = 'city',\n  street = 'street',\n  houseNumber = 'houseNumber',\n  name = 'name',\n  email = 'email',\n  phone = 'phone',\n  cardNumber = 'cardNumber',\n}\n\nexport const initialValues: Record<OrderFields, any> = {\n  [OrderFields.city]: '',\n  [OrderFields.street]: '',\n  [OrderFields.houseNumber]: 0,\n  [OrderFields.name]: '',\n  [OrderFields.email]: '',\n  [OrderFields.phone]: '',\n  [OrderFields.cardNumber]: '',\n};\n\nconst OrderModel = types.model({\n  [OrderFields.city]: types.maybeNull(types.string),\n  [OrderFields.street]: types.maybeNull(types.string),\n  [OrderFields.houseNumber]: types.maybeNull(types.number),\n  [OrderFields.name]: types.maybeNull(types.string),\n  [OrderFields.email]: types.maybeNull(types.string),\n  [OrderFields.phone]: types.maybeNull(types.string),\n  [OrderFields.cardNumber]: types.maybeNull(types.string),\n});\n\nconst ValidatedItem = types.compose(BaseModel, ValidationModel, OrderModel).volatile(() => ({\n  errors: {},\n  validation: {\n    [OrderFields.city]: [required],\n    [OrderFields.street]: [required],\n    [OrderFields.houseNumber]: [required],\n    [OrderFields.name]: [required],\n    [OrderFields.email]: [required, regexpValidation(/.+@.+\\..+/i, MUST_BE_EMAIL)],\n    [OrderFields.phone]: [required, regexpValidation(/^((\\+7|7|8)+([0-9]){10})$/, MUST_BE_PHONE)],\n    [OrderFields.cardNumber]: [required],\n  },\n}));\n\nexport default ValidatedItem;\n","import ApiClient from './ApiClient';\nimport { TBeerListParams, IBeerDTO } from './types';\n\nconst beerApi = {\n  get: (params: TBeerListParams = {}) => ApiClient.get<{ data: IBeerDTO[] }>(`/beers`, { params }),\n  getById: (id: string) => ApiClient.get<{ data: IBeerDTO }>(`/beers/${id}`),\n  /** ids most be type: 1|2|3|4 */\n  getByIds: (ids: string) => ApiClient.get<{ data: IBeerDTO }>(`/beers/`, { params: { ids } }),\n};\n\nexport default beerApi;\n","import beerApi from 'api/beer';\nimport { types, flow, applySnapshot, Instance } from 'mobx-state-tree';\nimport { ApiErrorsStore } from 'store';\n\nimport BaseModel from './Base';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst BeerDetail = types\n  .compose(BaseModel, RemoteDataModel, BeerModel)\n  .named('Beer')\n  .actions((self) => ({\n    loadById: flow(function* loadById(id: string) {\n      self.setPending();\n      try {\n        const { data } = yield beerApi.getById(id);\n\n        setTimeout(() => {\n          applySnapshot(self, data[0]);\n          self.setLoadSuccess();\n        }, 400);\n      } catch (e) {\n        self.setError();\n        ApiErrorsStore.addError(e);\n      }\n    }),\n  }));\n\nexport default BeerDetail;\n\nexport interface IBeerDetail extends Instance<typeof BeerDetail> {}\n","export const addIdToUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n  if (!queryArray.length) {\n    return `?${id}=1`;\n  }\n\n  if (queryArray.length) {\n    const currentItem = queryArray.map((item) => item.split('=')).find((item) => item[0] === id);\n\n    if (currentItem) {\n      return `?${queryArray\n        .map((item) => {\n          const [currentId, currentCount] = item.split('=');\n          if (currentId === id) {\n            return `${currentId}=${+currentCount + 1}`;\n          }\n\n          return item;\n        })\n        .join('&')}`;\n    }\n\n    return `${search}&${id}=1`;\n  }\n\n  return '';\n};\n\nexport const decrementCountFromIdFromUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n\n  const currentItem = queryArray.map((item) => item.split('=')).find((item) => item[0] === id);\n\n  if (currentItem) {\n    return `?${queryArray\n      .map((item) => {\n        const [currentId, currentCount] = item.split('=');\n        if (currentId === id) {\n          return `${currentId}=${+currentCount === 1 ? 1 : +currentCount - 1}`;\n        }\n\n        return item;\n      })\n      .join('&')}`;\n  }\n\n  return '';\n};\n\nexport const removeIdFromUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n  if (id) {\n    return queryArray.length\n      ? queryArray\n          .map((item) => item.split('='))\n          .filter((item) => item[0] !== id)\n          .map((item, i) => `${i ? '&' : '?'}${item[0]}=${item[1]}`)\n          .join('')\n      : '';\n  }\n\n  return search;\n};\n\nexport const isExistIdFromUrl = (search: string, id: string): boolean =>\n  !!search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .find((item) => item[0] === id);\n\nexport const countByIdFromUrl = (search: string, id: string): number => {\n  const current = search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .find((item) => item[0] === id);\n\n  return current ? +current[1] : 0;\n};\n\nexport const countIdsFromUrl = (search: string): number => (search ? search.replace('?', '').split('&').length : 0);\n\nexport const getTotalCount = (search: string) =>\n  search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .reduce((total, count) => total + Number(count[1]), 0);\n","import * as React from 'react';\n\nimport { Button, Card, Descriptions, Skeleton, Typography } from 'antd';\nimport {\n  DeleteOutlined,\n  MinusOutlined,\n  PlusCircleOutlined,\n  PlusOutlined,\n  ShoppingCartOutlined,\n  StarOutlined,\n} from '@ant-design/icons';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport BeerDetail from 'models/BeerDetail';\nimport { initialBeer } from 'models/Beer';\n\nimport './styles.css';\nimport routes from 'routes';\nimport {\n  addIdToUrl,\n  countByIdFromUrl,\n  decrementCountFromIdFromUrl,\n  isExistIdFromUrl,\n  removeIdFromUrl,\n} from 'utils/queryStringHeplers';\nimport { BreaadCrumbsStore } from 'store';\nimport { getLabelBySubUrl } from 'components/menu/config';\n\nconst BeerDetails: React.FC<{}> = () => {\n  const { category, id } = useParams<{ category: string; id: string }>();\n  const { search } = useLocation();\n  const item = React.useRef(BeerDetail.create({ ...initialBeer })).current;\n\n  React.useEffect(() => {\n    if (id) {\n      item.loadById(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  React.useEffect(() => {\n    BreaadCrumbsStore.set([\n      { id: category, label: `Catalog ${getLabelBySubUrl(category)}`, url: routes.mainWithCategory(category) },\n      { id, label: item.name, url: routes.details(category, id) + search },\n    ]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [item.name]);\n\n  return (\n    // eslint-disable-next-line react/jsx-key\n    <Card title={item.name} actions={[<StarOutlined />]}>\n      {item.dataPending && (\n        <>\n          <Skeleton loading active />\n          <Skeleton loading active />\n        </>\n      )}\n      {item.dataLoadSuccess && (\n        <div className=\"details-container\">\n          <img className=\"details-beer-img\" src={item.image_url || ''} alt={item.name} />\n          <div>\n            <Descriptions className=\"beer-card_description\" title=\"Details\" size=\"middle\" column={2}>\n              <Descriptions.Item label=\"Description\" span={2}>\n                {item.description}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Brewers tips\" span={2}>\n                {item.brewers_tips}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Contributed by\" span={1}>\n                {item.contributed_by}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"First brewed\">{item.first_brewed}</Descriptions.Item>\n              <Descriptions.Item label=\"Food pairing\">\n                {item.food_pairing.map((food: string, i) => (\n                  <span key={food} className=\"food-span\">\n                    {food}\n                    {item.food_pairing.length === i + 1 ? '' : ', '}\n                  </span>\n                ))}\n              </Descriptions.Item>\n              {/** TODO need add ingredients */}\n            </Descriptions>\n            <div className=\"actions-container\">\n              <Link to={routes.details(category, id) + addIdToUrl(search, id)}>\n                <Button icon={<PlusOutlined />} />\n              </Link>\n              <Link to={routes.details(category, id) + decrementCountFromIdFromUrl(search, id)}>\n                <Button icon={<MinusOutlined />} />\n              </Link>\n              <Typography className=\"actions-container_item\">{countByIdFromUrl(search, id)}</Typography>\n              {isExistIdFromUrl(search, id) ? (\n                <Link to={routes.details(category, id) + removeIdFromUrl(search, String(id))}>\n                  <Button className=\"actions-container_item\" icon={<DeleteOutlined />}>\n                    Remove from Card\n                  </Button>\n                </Link>\n              ) : (\n                <Link to={routes.details(category, id) + addIdToUrl(search, String(id))}>\n                  <Button className=\"actions-container_item\" icon={<PlusCircleOutlined />}>\n                    Add to Card\n                  </Button>\n                </Link>\n              )}\n              <Link to={routes.cart(category) + search}>\n                <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />}>\n                  Go to Cart\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(BeerDetails);\n","/* eslint-disable no-param-reassign */\nimport { types, cast } from 'mobx-state-tree';\n\nexport type TValidationRule = {\n  (value: string | number): string | boolean;\n};\nexport interface IObservableArray<T = any> extends Array<T> {\n  toJSON(): T[];\n}\n\nexport const NO_EMPTY_ERROR_TEXT = 'The field must be filled';\n\nexport const MUST_BE_NUMBER_ERROR_TEXT = 'Enter the number';\n\nexport const MUST_BE_EMAIL = 'Enter the email';\n\nexport const MUST_BE_PHONE = 'Enter the phone';\n\nexport const regexpValidation = (regexp: RegExp, message: string): TValidationRule => (value) =>\n  regexp.test(value.toString()) || message;\n\nexport const required: TValidationRule = (value) => {\n  if (!value) {\n    return NO_EMPTY_ERROR_TEXT;\n  }\n\n  return true;\n};\n\nexport const mustBeNumber: TValidationRule = (value) =>\n  /(\\d+\\.\\d+|\\d)/.test(value.toString()) ? true : MUST_BE_NUMBER_ERROR_TEXT;\n\nexport const maxValue = (max: number, message: string): TValidationRule => (value) =>\n  Number(value) <= max ? true : message;\n\nexport const minValue = (min: number, message: string): TValidationRule => (value) =>\n  Number(value) >= min ? true : message;\n\nexport const textMaxLength = (maxLength: number, message: string) => (value: string) =>\n  value.length > maxLength ? message : true;\n\ntype TValidationModel<T extends string | boolean | Array<TValidationRule>> = Record<string, T>;\n\nconst ValidationModel = types\n  .model({} as TValidationModel<string>)\n  .volatile(() => ({\n    validation: {} as TValidationModel<TValidationRule[]>,\n    errors: {} as TValidationModel<boolean | string>,\n  }))\n  .actions((self) => {\n    // TODO: replace any type\n    const setField = (key: string, value: string) => {\n      delete self.errors[key];\n      self[key] = cast(value);\n    };\n\n    // TODO: replace any type\n    const validateField = (key: string): boolean => {\n      if (self.validation[key]) {\n        const error = self.validation[key].reduce(\n          (result: string | boolean, check: TValidationRule) => (result !== true ? result : check(self[key])),\n          true\n        );\n\n        if (error !== true) {\n          self.errors = {\n            ...self.errors,\n            [key]: error,\n          };\n          return false;\n        }\n\n        delete self.errors[key];\n      }\n\n      return true;\n    };\n    const validate = (): boolean => {\n      let isValid = true;\n\n      Object.keys(self.validation).forEach((key) => {\n        isValid = validateField(key) ? isValid : false;\n      });\n\n      return isValid;\n    };\n\n    return {\n      validateField,\n      validate,\n      resetErrors() {\n        self.errors = {};\n      },\n      setField,\n    };\n  });\n\nexport default ValidationModel;\n","import { Form, Alert, Button, Card, Input, Typography } from 'antd';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport routes from 'routes';\nimport Order, { initialValues, OrderFields } from 'models/Order';\nimport { countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport './styles.css';\nimport { BreaadCrumbsStore } from 'store';\nimport { getLabelBySubUrl } from 'components/menu/config';\n\nconst { Title } = Typography;\n\nconst Ordering: React.FC<{}> = () => {\n  const { search } = useLocation();\n  const { category } = useParams<{ category: string }>();\n\n  const item = React.useRef(Order.create(initialValues)).current;\n  const productsLength = countIdsFromUrl(search);\n\n  React.useEffect(() => {\n    BreaadCrumbsStore.set([\n      { id: category, label: `Catalog ${getLabelBySubUrl(category)}`, url: routes.mainWithCategory(category) },\n      {\n        id: 'cart',\n        label: productsLength ? `Selected ${productsLength} products in cart` : 'Empty Cart',\n        url: routes.cart(category) + search,\n      },\n      { id: 'order', label: 'Order', url: routes.order(category) + search },\n    ]);\n  }, [productsLength, search, category]);\n\n  const handleChange = (fieldName: OrderFields): React.ChangeEventHandler<HTMLInputElement> => (e) => {\n    const { value } = e.target;\n    item.setField(fieldName, fieldName === OrderFields.houseNumber ? +value : value);\n  };\n\n  const handleBlure = (fieldName: OrderFields) => () => {\n    item.validateField(fieldName);\n  };\n\n  const handleSubmit = () => {\n    if (!item.validate()) {\n      return;\n    }\n\n    // eslint-disable-next-line no-alert\n    alert(`Data for send: \\n${JSON.stringify(item)}`);\n  };\n\n  return (\n    <Card title=\"Ordering\" className=\"beer-order\">\n      {!productsLength && <Alert message=\"Products not found\" type=\"info\" />}\n      {productsLength && (\n        <>\n          <div className=\"delivery-information\">\n            <Title level={4}>Delivery info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.city}\n                label=\"City/Town\"\n                help={item.errors[OrderFields.city]}\n                validateStatus={item.errors[OrderFields.city] ? 'error' : ''}\n              >\n                <Input\n                  placeholder=\"Prague\"\n                  value={item.city || ''}\n                  onChange={handleChange(OrderFields.city)}\n                  onBlur={handleBlure(OrderFields.city)}\n                />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.street}\n                label=\"Street\"\n                help={item.errors[OrderFields.street]}\n                validateStatus={item.errors[OrderFields.street] ? 'error' : ''}\n              >\n                <Input\n                  placeholder=\"Parizhska\"\n                  value={item.street || ''}\n                  onChange={handleChange(OrderFields.street)}\n                  onBlur={handleBlure(OrderFields.street)}\n                />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.houseNumber}\n                label=\"House number\"\n                help={item.errors[OrderFields.houseNumber]}\n                validateStatus={item.errors[OrderFields.houseNumber] ? 'error' : ''}\n              >\n                <Input\n                  placeholder=\"1\"\n                  value={item.houseNumber || ''}\n                  onChange={handleChange(OrderFields.houseNumber)}\n                  onBlur={handleBlure(OrderFields.houseNumber)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"contact-information\">\n            <Title level={4}>Contact info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.name}\n                label=\"Name\"\n                validateTrigger=\"onBlur\"\n                help={item.errors[OrderFields.name]}\n                validateStatus={item.errors[OrderFields.name] ? 'error' : ''}\n              >\n                <Input\n                  value={item.name || ''}\n                  onChange={handleChange(OrderFields.name)}\n                  onBlur={handleBlure(OrderFields.name)}\n                />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.email}\n                label=\"Email\"\n                help={item.errors[OrderFields.email]}\n                validateStatus={item.errors[OrderFields.email] ? 'error' : ''}\n              >\n                <Input\n                  placeholder=\"example@gmai.com\"\n                  value={item.email || ''}\n                  onChange={handleChange(OrderFields.email)}\n                  onBlur={handleBlure(OrderFields.email)}\n                />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.phone}\n                label=\"Phone\"\n                help={item.errors[OrderFields.phone]}\n                validateStatus={item.errors[OrderFields.phone] ? 'error' : ''}\n              >\n                <Input\n                  placeholder=\"+7-999-000-00-00\"\n                  value={item.phone || ''}\n                  onChange={handleChange(OrderFields.phone)}\n                  onBlur={handleBlure(OrderFields.phone)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"contact-information\">\n            <Title level={4}>Payment info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.cardNumber}\n                label=\"card numder\"\n                help={item.errors[OrderFields.cardNumber]}\n                validateStatus={item.errors[OrderFields.cardNumber] ? 'error' : ''}\n              >\n                <Input\n                  placeholder=\"example@gmai.com\"\n                  value={item.city || ''}\n                  onChange={handleChange(OrderFields.cardNumber)}\n                  onBlur={handleBlure(OrderFields.cardNumber)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"cart_button-container\">\n            <Button onClick={handleSubmit} type=\"primary\">\n              Buy $$$\n            </Button>\n          </div>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(Ordering);\n","/* eslint-disable react/jsx-key */\nimport * as React from 'react';\n\nimport { Button, Card } from 'antd';\nimport { PlusCircleOutlined, ShoppingCartOutlined, StarOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\nimport routes from 'routes';\n\nimport './styles.css';\nimport { observer } from 'mobx-react';\nimport { IBeer } from 'models/Beer';\nimport { addIdToUrl } from 'utils/queryStringHeplers';\n\ninterface IBeerCardProps {\n  category: string;\n  data: IBeer;\n}\n\nconst { Meta } = Card;\n\nconst BeerCard: React.FC<IBeerCardProps> = ({ category, data }) => {\n  const { search } = useLocation();\n\n  return (\n    <Card\n      title={data.name}\n      actions={[\n        <Button icon={<StarOutlined />} />,\n\n        <Link to={routes.details(category, String(data.id)) + search}>\n          <Button>Details...</Button>\n        </Link>,\n        <Link to={routes.mainWithCategory(category) + addIdToUrl(search, String(data.id))}>\n          <Button\n            className=\"beer_add-to-cart\"\n            icon={\n              <>\n                <PlusCircleOutlined /> 1 in\n                <ShoppingCartOutlined />\n              </>\n            }\n          />\n        </Link>,\n        <Link to={routes.cart(category) + search}>\n          <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />} />\n        </Link>,\n      ]}\n    >\n      <Meta\n        avatar={<img className=\"beer-img\" src={data.image_url || ''} alt={data.name} />}\n        title={data.name}\n        description={data.description}\n      />\n    </Card>\n  );\n};\n\nexport default observer(BeerCard);\n","import * as React from 'react';\n\nimport Search from 'antd/lib/input/Search';\nimport { Button, Card, Col, Row, Skeleton } from 'antd';\nimport { observer } from 'mobx-react';\nimport { BeerCollectionStore, BreaadCrumbsStore } from 'store';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport routes from 'routes';\nimport { countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport {\n  ABVBeerTypeConfig,\n  BeerStrengthType,\n  ColorBeerTypeConfig,\n  BeerColoursType,\n  getLabelBySubUrl,\n} from 'components/menu/config';\nimport BeerCard from './Card/Card';\nimport './styles.css';\n\nconst MainPage = () => {\n  const { search } = useLocation();\n  const { category } = useParams<{ category: string }>();\n\n  React.useEffect(() => {\n    if (category) {\n      BreaadCrumbsStore.set([\n        { id: category, label: `Catalog ${getLabelBySubUrl(category)}`, url: routes.mainWithCategory(category) },\n      ]);\n      BeerCollectionStore.loadByParams(\n        (ABVBeerTypeConfig[category as BeerStrengthType] || ColorBeerTypeConfig[category as BeerColoursType]).params\n      );\n    } else {\n      BeerCollectionStore.loadByParams(ColorBeerTypeConfig.gold.params);\n    }\n  }, [category]);\n\n  const handleSearch = (value: string) => {\n    BeerCollectionStore.loadByParams({ beer_name: value });\n  };\n\n  return (\n    <div className=\"main-page_container\">\n      <div className=\"main-page_header\">\n        <div className=\"main-page_search_container\">\n          <Search placeholder=\"please input text\" enterButton=\"Search\" size=\"large\" onSearch={handleSearch} />\n        </div>\n        {!!countIdsFromUrl(search) && (\n          <Link to={routes.cart(category) + search}>\n            <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />}>\n              In Cart {countIdsFromUrl(search)} items\n            </Button>\n          </Link>\n        )}\n      </div>\n      <Row>\n        {BeerCollectionStore.dataPending &&\n          new Array(12).fill({}).map((item, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Col key={i} className=\"main-page_beer-list_col\" span={8}>\n              <Card>\n                <Skeleton className=\"catalog-item-sceleton\" loading avatar active />\n              </Card>\n            </Col>\n          ))}\n        {BeerCollectionStore.dataLoadSuccess &&\n          BeerCollectionStore.items.toJSON().map((beer) => (\n            <Col key={beer.id} className=\"main-page_beer-list_col\" span={8}>\n              <BeerCard category={category} data={beer} />\n            </Col>\n          ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default observer(MainPage);\n","import * as React from 'react';\n\nimport { CartStore } from 'store';\n\nconst useLoadPruductByQueryUrl = (search: string) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  React.useEffect(() => {\n    const queryArray = (search && search.split('?')[1].split('&')) || [];\n\n    let ids: string = '';\n    const counts: number[] = [];\n    queryArray.forEach((param, i) => {\n      const [key, value] = param.split('=');\n      ids += `${key}${i < queryArray.length ? '|' : ''}`;\n      counts.push(+value);\n    });\n\n    CartStore.loadByIds(ids).then(() => {\n      CartStore.items.forEach((item, i) => {\n        item.setCount(counts[i]);\n      });\n    });\n  }, [search]);\n};\n\nexport default useLoadPruductByQueryUrl;\n","import * as React from 'react';\n\nimport { Alert, Button, Card, Descriptions, Skeleton, Typography } from 'antd';\nimport useLoadPruductByQueryUrl from 'hooks/loadPruductByQueryUrl';\nimport { observer } from 'mobx-react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport routes from 'routes';\nimport { BreaadCrumbsStore, CartStore } from 'store';\nimport { countByIdFromUrl, getTotalCount, removeIdFromUrl, countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport './styles.css';\nimport { getLabelBySubUrl } from 'components/menu/config';\n\nconst { Title } = Typography;\n\nconst DEFAULT_PRICE = 3.5;\n\nconst BeerCart: React.FC<{}> = () => {\n  const { category } = useParams<{ category: string }>();\n  const { search } = useLocation();\n\n  useLoadPruductByQueryUrl(search);\n\n  const totalCount = getTotalCount(search);\n\n  const productsLength = countIdsFromUrl(search);\n\n  React.useEffect(() => {\n    BreaadCrumbsStore.set([\n      { id: category, label: `Catalog ${getLabelBySubUrl(category)}`, url: routes.mainWithCategory(category) },\n      { id: 'cart', label: 'Cart', url: routes.cart(category) + search },\n    ]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [category, search]);\n\n  return (\n    <Card title=\"Cart\" className=\"beer-cart\">\n      {CartStore.dataPending && (\n        <>\n          <Skeleton loading active />\n          <Skeleton loading active />\n          <Skeleton loading active />\n        </>\n      )}\n      {CartStore.dataLoadSuccess && !productsLength && <Alert message=\"Empty Cart\" type=\"info\" />}\n      {CartStore.dataLoadSuccess && !!productsLength && (\n        <>\n          {CartStore.items.map((item, i) => (\n            <React.Fragment key={item.id}>\n              <div className=\"card_item-container\">\n                <img className=\"cart-beer-img\" src={item.image_url || ''} alt={item.name} />\n                <div>\n                  <Descriptions\n                    className=\"cart_item_description\"\n                    title={`${i + 1}. ${item.name}`}\n                    size=\"middle\"\n                    column={2}\n                  >\n                    <Descriptions.Item label=\"Description\" span={2}>\n                      {item.description}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"count\">{countByIdFromUrl(search, String(item.id))}</Descriptions.Item>\n                    <Descriptions.Item label=\"price\">\n                      {DEFAULT_PRICE * countByIdFromUrl(search, String(item.id))} $\n                    </Descriptions.Item>\n                  </Descriptions>\n                  <div className=\"cart_item_actions\">\n                    <Link to={routes.details(category, item.id.toString()) + search}>\n                      <Button className=\"cart_item_first_btn\">Details</Button>\n                    </Link>\n                    <Link to={routes.cart(category) + removeIdFromUrl(search, String(item.id))}>\n                      <Button>Remove</Button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </React.Fragment>\n          ))}\n          <Title level={4}>TOTAL: {totalCount * DEFAULT_PRICE} $</Title>\n          {CartStore.items.toJSON().length && (\n            <div className=\"cart_button-container\">\n              <Link to={routes.order(category) + search}>\n                <Button type=\"primary\">Go to ordering</Button>\n              </Link>\n            </div>\n          )}\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(BeerCart);\n","import React from 'react';\n\nimport { Breadcrumb, Layout } from 'antd';\n\nimport BeerMenu from 'components/menu';\nimport BeerDetails from 'pages/detail';\nimport Ordering from 'pages/ordering';\nimport MainPage from 'pages/main';\n\nimport { Switch, Route, Link, useParams } from 'react-router-dom';\n\nimport routes from 'routes';\nimport BeerCart from 'pages/cart';\n\nimport './App.css';\nimport { BreaadCrumbsStore } from 'store';\nimport { observer } from 'mobx-react';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App: React.FC = () => {\n  const { category } = useParams<{ category: string }>();\n  return (\n    <Layout>\n      <Header className=\"header\">\n        <div className=\"logo\" />\n        Beans Love Beers\n      </Header>\n      <Content style={{ padding: '0 50px' }}>\n        <Breadcrumb style={{ margin: '16px 0', fontSize: 18 }}>\n          {BreaadCrumbsStore.items.toJSON().map((item) => (\n            <Breadcrumb.Item key={item.id}>\n              <Link to={item.url}>{item.label}</Link>\n            </Breadcrumb.Item>\n          ))}\n        </Breadcrumb>\n        <Layout className=\"site-layout-background\">\n          <Sider className=\"site-layout-background\" width={200}>\n            <BeerMenu selectedCategory={category} />\n          </Sider>\n          <Content style={{ padding: '0 24px', minHeight: 280 }}>\n            <Switch>\n              <Route exact path={routes.mainWithCategory()}>\n                <MainPage />\n              </Route>\n              <Route exact path={routes.main()}>\n                <MainPage />\n              </Route>\n              <Route path={routes.details()}>\n                <BeerDetails />\n              </Route>\n              <Route path={routes.cart()}>\n                <BeerCart />\n              </Route>\n              <Route path={routes.order()}>\n                <Ordering />\n              </Route>\n            </Switch>\n          </Content>\n        </Layout>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Beer Catalog developed by Igor Bezdeneznhykh</Footer>\n    </Layout>\n  );\n};\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport routes from 'routes';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path={routes.main()}>\n        <App />\n      </Route>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}