{"version":3,"sources":["models/RemoteData.ts","components/menu/config.ts","components/menu/index.tsx","models/Beer.ts","models/BeerCollection.ts","models/ApiErrors/ApiErrors.ts","models/ApiErrors/index.ts","models/Base.ts","models/Cart.ts","store.ts","api/ApiClient.ts","models/Order.ts","api/beer.ts","models/BeerDetail.ts","routes.ts","utils/queryStringHeplers.ts","pages/detail/index.tsx","pages/ordering/index.tsx","pages/main/Card/Card.tsx","pages/main/index.tsx","hooks/loadPruductByQueryUrl.ts","pages/cart/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RemoteDataStatuses","ABVBeerTypeConfig","hard","params","abv_gt","label","middle","abv_lt","light","ColorBeerTypeConfig","lightBlonde","ebc_gt","ebc_lt","blonde","gold","amber","copper","darkCopper","veryDarkBrown","black","SubMenu","Menu","BeerMenu","onClick","style","height","defaultSelectedKeys","defaultOpenKeys","mode","icon","MailOutlined","title","Object","keys","map","key","Item","SettingOutlined","React","initialBeer","id","name","tagline","abv","attenuation_level","boil_volume","value","unit","brewers_tips","contributed_by","description","ebc","first_brewed","food_pairing","ibu","image_url","ph","srm","target_fg","target_og","volume","VolumeModel","types","model","number","string","BeerModel","maybeNull","array","selectedCount","optional","actions","self","setCount","count","RemoteDataModel","volatile","loadStatus","initial","views","pending","error","loadSuccess","saveSuccess","setInitial","setPending","setError","setLoadSuccess","setSaveSuccess","BeerCollection","compose","items","named","loadAll","flow","beerApi","get","data","setTimeout","applySnapshot","ApiErrorsStore","addError","ApiErrors","errors","push","clearErrors","clear","BaseModel","setField","cast","CartModel","totalPrice","address","Cart","toJSON","length","getCurrentProduct","find","product","loadByIds","loadById","ids","getByIds","BeerCollectionStore","create","CartStore","statusErrors","404","502","503","504","network","default","ApiClient","axios","baseURL","process","timeout","interceptors","response","use","config","skipError","status","request","processServerError","Promise","reject","OrderFields","getById","BeerDetail","routes","main","details","cart","order","addIdToUrl","search","queryArray","split","item","currentId","currentCount","join","decrementCountFromIdFromUrl","removeIdFromUrl","filter","i","isExistIdFromUrl","replace","countByIdFromUrl","current","countIdsFromUrl","observer","useParams","useLocation","StarOutlined","className","to","dataPending","loading","active","dataLoadSuccess","src","alt","size","column","span","food","PlusOutlined","MinusOutlined","String","DeleteOutlined","PlusCircleOutlined","ShoppingCartOutlined","initialValues","city","street","houseNumber","email","phone","cardNumber","OrderModel","ajv","Ajv","addFormats","schema","properties","type","format","validator","compile","Validator","propertyValidation","prop","obj","ValidatedItem","Title","Typography","Order","handleChange","fieldName","e","target","productsLength","message","level","rules","required","help","placeholder","onChange","Meta","Card","avatar","enterButton","Array","fill","beer","useLoadPruductByQueryUrl","counts","forEach","param","then","totalCount","reduce","total","Number","getTotalCount","toString","Header","Layout","Content","Footer","Sider","App","width","padding","minHeight","exact","path","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.09f58d3d.chunk.js","sourcesContent":["import { types, Instance } from 'mobx-state-tree';\n\n/* eslint-disable no-param-reassign */\nexport enum RemoteDataStatuses {\n  initial = 'initial',\n  pending = 'pending',\n  error = 'error',\n  loadSuccess = 'loadSuccess',\n  saveSuccess = 'saveSuccess',\n}\n\nexport const RemoteDataModel = types\n  .model('RemoteDataModel')\n  .volatile(() => ({\n    loadStatus: RemoteDataStatuses.initial,\n  }))\n  .views((self) => ({\n    get dataInitial(): boolean {\n      return self.loadStatus === RemoteDataStatuses.initial;\n    },\n    get dataPending(): boolean {\n      return self.loadStatus === RemoteDataStatuses.pending;\n    },\n    get dataError(): boolean {\n      return self.loadStatus === RemoteDataStatuses.error;\n    },\n    get dataLoadSuccess(): boolean {\n      return self.loadStatus === RemoteDataStatuses.loadSuccess;\n    },\n    get dataSaveSuccess(): boolean {\n      return self.loadStatus === RemoteDataStatuses.saveSuccess;\n    },\n  }))\n  .actions((self) => ({\n    setInitial: () => {\n      self.loadStatus = RemoteDataStatuses.initial;\n    },\n    setPending: () => {\n      self.loadStatus = RemoteDataStatuses.pending;\n    },\n    setError: () => {\n      self.loadStatus = RemoteDataStatuses.error;\n    },\n    setLoadSuccess: () => {\n      self.loadStatus = RemoteDataStatuses.loadSuccess;\n    },\n    setSaveSuccess: () => {\n      self.loadStatus = RemoteDataStatuses.saveSuccess;\n    },\n  }));\n\nexport interface IRemoteDataModel extends Instance<typeof RemoteDataModel> {}\n","import { IBeerListParams } from 'api/types';\n\ntype BeerMenuConfig = Record<string, { params: IBeerListParams; label: string }>;\n\nexport const ABVBeerTypeConfig: BeerMenuConfig = {\n  hard: { params: { abv_gt: 10 }, label: 'Hard' },\n  middle: { params: { abv_lt: 10, abv_gt: 5 }, label: 'Middle' },\n  light: { params: { abv_lt: 5 }, label: 'Light' },\n};\n\nexport const ColorBeerTypeConfig: BeerMenuConfig = {\n  lightBlonde: { params: { ebc_gt: 6, ebc_lt: 9 }, label: 'Light Blonde' },\n  blonde: { params: { ebc_gt: 9, ebc_lt: 12 }, label: 'Blonde (yellow)' },\n  gold: { params: { ebc_gt: 12, ebc_lt: 20 }, label: 'Gold' },\n  amber: { params: { ebc_gt: 20, ebc_lt: 30 }, label: 'Amber' },\n  copper: { params: { ebc_gt: 30, ebc_lt: 45 }, label: 'Copper' },\n  darkCopper: { params: { ebc_gt: 45, ebc_lt: 75 }, label: 'Dark Copper / Brown' },\n  veryDarkBrown: { params: { ebc_gt: 75, ebc_lt: 120 }, label: 'Very Dark Brown (transparent)' },\n  black: { params: { ebc_gt: 120 }, label: 'Black (not transparent)' },\n};\n","import * as React from 'react';\n\nimport { Menu } from 'antd';\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { ABVBeerTypeConfig, ColorBeerTypeConfig } from './config';\n\nconst { SubMenu } = Menu;\n\nconst BeerMenu: React.FC = () => {\n  const handleClick = () => {};\n  return (\n    <Menu\n      onClick={handleClick}\n      style={{ height: '100%' }}\n      defaultSelectedKeys={['gold']}\n      defaultOpenKeys={['sub1', 'colours', 'strength']}\n      mode=\"inline\"\n    >\n      <SubMenu key=\"colours\" icon={<MailOutlined />} title=\"Beer Colours\">\n        {Object.keys(ColorBeerTypeConfig).map((key) => (\n          <Menu.Item key={key}>{ColorBeerTypeConfig[key].label}</Menu.Item>\n        ))}\n      </SubMenu>\n      <SubMenu key=\"strength\" icon={<SettingOutlined />} title=\"Strength of Beer\">\n        {Object.keys(ABVBeerTypeConfig).map((key) => (\n          <Menu.Item key={key}>{ABVBeerTypeConfig[key].label}</Menu.Item>\n        ))}\n      </SubMenu>\n    </Menu>\n  );\n};\n\nexport default React.memo(BeerMenu);\n","/* eslint-disable no-param-reassign */\nimport { types, Instance } from 'mobx-state-tree';\n\nexport const initialBeer = {\n  id: 0,\n  name: '',\n  tagline: '',\n  abv: 0,\n  attenuation_level: 0,\n  boil_volume: { value: 0, unit: '' },\n  brewers_tips: '',\n  contributed_by: '',\n  description: '',\n  ebc: null,\n  first_brewed: '',\n  food_pairing: [],\n  ibu: null,\n  image_url: '',\n  ph: null,\n  srm: null,\n  target_fg: 0,\n  target_og: 0,\n  volume: { value: 0, unit: '' },\n};\n\nconst VolumeModel = types.model({\n  value: types.number,\n  unit: types.string,\n});\n\nconst BeerModel = types\n  .model({\n    id: types.number,\n    name: types.string,\n    tagline: types.string,\n    abv: types.number,\n    attenuation_level: types.number,\n    boil_volume: VolumeModel,\n    brewers_tips: types.string,\n    contributed_by: types.string,\n    description: types.string,\n    ebc: types.maybeNull(types.number),\n    first_brewed: types.string,\n    food_pairing: types.array(types.string),\n    ibu: types.maybeNull(types.number),\n    image_url: types.string,\n    ph: types.maybeNull(types.number),\n    srm: types.maybeNull(types.number),\n    target_fg: types.number,\n    target_og: types.number,\n    volume: VolumeModel,\n    // selectedCount - select for Cart\n    selectedCount: types.optional(types.number, 1),\n  })\n  .actions((self) => ({\n    setCount(count: number) {\n      self.selectedCount = count || 1;\n    },\n  }));\n\nexport default BeerModel;\n\nexport interface IBeer extends Instance<typeof BeerModel> {}\n","import { types, flow, applySnapshot } from 'mobx-state-tree';\nimport beerApi from 'api/beer';\nimport { ApiErrorsStore } from 'store';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst BeerCollection = types\n  .compose(\n    RemoteDataModel,\n    types.model({\n      items: types.array(BeerModel),\n    })\n  )\n  .named('BeerCollection')\n  .actions((self) => {\n    const loadAll = flow(function* loadAll() {\n      self.setPending();\n\n      try {\n        const { data } = yield beerApi.get();\n\n        setTimeout(() => {\n          applySnapshot(self.items, data);\n          self.setLoadSuccess();\n        }, 2000);\n      } catch (e) {\n        self.setError();\n        ApiErrorsStore.addError(e);\n      }\n    });\n\n    return {\n      loadAll,\n    };\n  });\n\nexport default BeerCollection;\n","/* eslint no-param-reassign: 0 */\nimport { types } from 'mobx-state-tree';\n\nexport const ApiErrors = types\n  .model({\n    errors: types.array(types.string),\n  })\n  .actions((self) => ({\n    addError(error: string) {\n      self.errors.push(error);\n    },\n    clearErrors() {\n      self.errors.clear();\n    },\n  }));\n\nexport default ApiErrors;\n","import { ApiErrors } from './ApiErrors';\n\nexport { ApiErrors };\n\nexport default ApiErrors;\n","/* eslint-disable no-param-reassign */\nimport { types, cast } from 'mobx-state-tree';\n\nconst BaseModel = types.model({} as Record<string, any>).actions((self) => {\n  // TODO: replace any type\n  const setField = (key: string, value: any) => {\n    self[key] = cast(value);\n  };\n\n  return {\n    setField,\n  };\n});\n\nexport default BaseModel;\n","import beerApi from 'api/beer';\nimport { types, flow, applySnapshot } from 'mobx-state-tree';\nimport { ApiErrorsStore } from 'store';\nimport BaseModel from './Base';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst CartModel = types.model({\n  items: types.array(BeerModel),\n  totalPrice: types.maybeNull(types.number),\n  address: types.maybeNull(types.string),\n});\n\nconst Cart = types\n  .compose(BaseModel, RemoteDataModel, CartModel)\n  .named('Cart')\n  .views((self) => ({\n    get count() {\n      return self.items.toJSON().length;\n    },\n  }))\n  .actions((self) => {\n    const getCurrentProduct = (id: number) => self.items.toJSON().find((product) => product.id === id);\n\n    /** ids most be type: 1|2|3|4 */\n    const loadByIds = flow(function* loadById(ids: string) {\n      self.setPending();\n      try {\n        const { data } = yield beerApi.getByIds(ids);\n\n        setTimeout(() => {\n          applySnapshot(self.items, data);\n          self.setLoadSuccess();\n        }, 2000);\n      } catch (e) {\n        ApiErrorsStore.addError(e);\n        self.setError();\n      }\n    });\n\n    return { getCurrentProduct, loadByIds };\n  });\n\nexport default Cart;\n","/* eslint-disable import/no-named-as-default */\nimport BeerCollection from 'models/BeerCollection';\nimport ApiErrors from 'models/ApiErrors';\nimport Cart from 'models/Cart';\n\nexport const BeerCollectionStore = BeerCollection.create({ items: [] });\nexport const ApiErrorsStore = ApiErrors.create({ errors: [] });\nexport const CartStore = Cart.create({ items: [] });\n","import axios from 'axios';\n// eslint-disable-next-line import/no-cycle\nimport { ApiErrorsStore } from 'store';\n\ntype IStatusErrors = {\n  [key in string | number]: string;\n};\n\nexport const statusErrors: IStatusErrors = {\n  404: 'Запрашиваемый ресурс не найден',\n  502: 'Сервис недоступен (502)',\n  503: 'Сервис недоступен (503)',\n  504: 'Время ожидания ответа превышено (504)',\n  network: 'Сервер не ответил, вероятно, проблемы с сетью',\n  default: 'Неизвестная сетевая ошибка',\n};\n\n// получение разнородных ошибок от сервисов\nexport const getErrorText = (values: any) => {\n  if (!values.errors) {\n    return JSON.stringify(values);\n  }\n\n  if (!values.errors.error) {\n    return JSON.stringify(values.errors);\n  }\n\n  if (!values.errors.error.message) {\n    return JSON.stringify(values.errors.error);\n  }\n\n  return JSON.stringify(values.errors.error.message);\n};\n\nexport const processServerError = (error: any) => {\n  if (error.response) {\n    // Запрос прошёл, но сервер ответил чем-то отличным от 2хх кода\n    if (statusErrors[error.response.status]) {\n      ApiErrorsStore.addError(`Ошибка: ${statusErrors[error.response.status]}`);\n    }\n  } else if (error.request) {\n    // Запрос отправлен, но ответ не пришёл\n    ApiErrorsStore.addError(statusErrors.network);\n  } else {\n    ApiErrorsStore.addError(statusErrors.default);\n  }\n};\n\nexport const onRejected = (error: any) => {\n  // если в конфиге не отключена обработка ошибок\n  if (!error.config.skipError) {\n    processServerError(error);\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  error.axios = true;\n\n  return Promise.reject(error);\n};\n\nexport const onFulfilled = (response: any) => response;\n\nconst API_URL = process.env.REACT_APP_BEER_API_URL;\n\nconst ApiClient = axios.create({\n  baseURL: API_URL,\n  timeout: 60 * 1000,\n});\n\nApiClient.interceptors.response.use(onFulfilled, onRejected);\n\nexport default ApiClient;\n","import { cast, types } from 'mobx-state-tree';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\nimport BaseModel from './Base';\n\nexport enum OrderFields {\n  city = 'city',\n  street = 'street',\n  houseNumber = 'houseNumber',\n  name = 'name',\n  email = 'email',\n  phone = 'phone',\n  cardNumber = 'cardNumber',\n}\n\nexport const initialValues: Record<OrderFields, any> = {\n  [OrderFields.city]: '',\n  [OrderFields.street]: '',\n  [OrderFields.houseNumber]: 0,\n  [OrderFields.name]: '',\n  [OrderFields.email]: '',\n  [OrderFields.phone]: '',\n  [OrderFields.cardNumber]: '',\n};\n\nconst OrderModel = types.model({\n  [OrderFields.city]: types.maybeNull(types.string),\n  [OrderFields.street]: types.maybeNull(types.string),\n  [OrderFields.houseNumber]: types.maybeNull(types.number),\n  [OrderFields.name]: types.maybeNull(types.string),\n  [OrderFields.email]: types.maybeNull(types.string),\n  [OrderFields.phone]: types.maybeNull(types.string),\n  [OrderFields.cardNumber]: types.maybeNull(types.string),\n});\n\nconst ajv = new Ajv();\naddFormats(ajv);\n\nconst schema = {\n  properties: {\n    [OrderFields.city]: { type: 'string' },\n    [OrderFields.street]: { type: 'string' },\n    [OrderFields.houseNumber]: { type: 'number' },\n    [OrderFields.name]: { type: 'string' },\n    [OrderFields.email]: { format: 'email' },\n    [OrderFields.phone]: { type: 'number' },\n    [OrderFields.cardNumber]: { type: 'number' },\n  },\n};\n\nconst validator = ajv.compile(schema);\n\nconst Validator = types.model('Validator', {} as Record<OrderFields, string | number>).views((self) => ({\n  get isValid() {\n    return validator(self);\n  },\n  propertyValidation(prop: OrderFields) {\n    const obj = {\n      [prop]: cast(self[prop]),\n    };\n\n    validator(obj);\n    return validator.errors;\n  },\n}));\n\nconst ValidatedItem = types.compose(BaseModel, OrderModel, Validator);\n\nexport default ValidatedItem;\n","import ApiClient from './ApiClient';\nimport { IBeerListParams, IBeerDTO } from './types';\n\nconst beerApi = {\n  get: (params: IBeerListParams = {}) => ApiClient.get<{ data: IBeerDTO[] }>(`/beers`, { params }),\n  getById: (id: string) => ApiClient.get<{ data: IBeerDTO }>(`/beers/${id}`),\n  /** ids most be type: 1|2|3|4 */\n  getByIds: (ids: string) => ApiClient.get<{ data: IBeerDTO }>(`/beers/`, { params: { ids } }),\n};\n\nexport default beerApi;\n","import beerApi from 'api/beer';\nimport { types, flow, applySnapshot, Instance } from 'mobx-state-tree';\nimport { ApiErrorsStore } from 'store';\n\nimport BaseModel from './Base';\nimport BeerModel from './Beer';\nimport { RemoteDataModel } from './RemoteData';\n\nconst BeerDetail = types\n  .compose(BaseModel, RemoteDataModel, BeerModel)\n  .named('Beer')\n  .actions((self) => ({\n    loadById: flow(function* loadById(id: string) {\n      self.setPending();\n      try {\n        const { data } = yield beerApi.getById(id);\n\n        setTimeout(() => {\n          applySnapshot(self, data[0]);\n          self.setLoadSuccess();\n        }, 2000);\n      } catch (e) {\n        self.setError();\n        ApiErrorsStore.addError(e);\n      }\n    }),\n  }));\n\nexport default BeerDetail;\n\nexport interface IBeerDetail extends Instance<typeof BeerDetail> {}\n","const routes = {\n  main: () => '/',\n  details: (id = ':id') => `/details/${id}`,\n  cart: () => '/cart',\n  order: () => '/order',\n};\n\nexport default routes;\n","export const addIdToUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n  if (!queryArray.length) {\n    return `?${id}=1`;\n  }\n\n  if (queryArray.length) {\n    const currentItem = queryArray.map((item) => item.split('=')).find((item) => item[0] === id);\n\n    if (currentItem) {\n      return `?${queryArray\n        .map((item) => {\n          const [currentId, currentCount] = item.split('=');\n          if (currentId === id) {\n            return `${currentId}=${+currentCount + 1}`;\n          }\n\n          return item;\n        })\n        .join('&')}`;\n    }\n\n    return `${search}&${id}=1`;\n  }\n\n  return '';\n};\n\nexport const decrementCountFromIdFromUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n\n  const currentItem = queryArray.map((item) => item.split('=')).find((item) => item[0] === id);\n\n  if (currentItem) {\n    return `?${queryArray\n      .map((item) => {\n        const [currentId, currentCount] = item.split('=');\n        if (currentId === id) {\n          return `${currentId}=${+currentCount === 1 ? 1 : +currentCount - 1}`;\n        }\n\n        return item;\n      })\n      .join('&')}`;\n  }\n\n  return '';\n};\n\nexport const removeIdFromUrl = (search: string, id: string): string => {\n  const queryArray = (search && search.split('?')[1].split('&')) || [];\n  if (id) {\n    return queryArray.length\n      ? queryArray\n          .map((item) => item.split('='))\n          .filter((item) => item[0] !== id)\n          .map((item, i) => `${i ? '&' : '?'}${item[0]}=${item[1]}`)\n          .join('')\n      : '';\n  }\n\n  return search;\n};\n\nexport const isExistIdFromUrl = (search: string, id: string): boolean =>\n  !!search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .find((item) => item[0] === id);\n\nexport const countByIdFromUrl = (search: string, id: string): number => {\n  const current = search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .find((item) => item[0] === id);\n\n  return current ? +current[1] : 0;\n};\n\nexport const countIdsFromUrl = (search: string): number => search.replace('?', '').split('&').length;\n\nexport const getTotalCount = (search: string) =>\n  search\n    .replace('?', '')\n    .split('&')\n    .map((item) => item.split('='))\n    .reduce((total, count) => total + Number(count[1]), 0);\n","import * as React from 'react';\n\nimport { Breadcrumb, Button, Card, Descriptions, Skeleton, Typography } from 'antd';\nimport {\n  DeleteOutlined,\n  MinusOutlined,\n  PlusCircleOutlined,\n  PlusOutlined,\n  ShoppingCartOutlined,\n  StarOutlined,\n} from '@ant-design/icons';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport BeerDetail from 'models/BeerDetail';\nimport { initialBeer } from 'models/Beer';\n\nimport './styles.css';\nimport routes from 'routes';\nimport {\n  addIdToUrl,\n  countByIdFromUrl,\n  decrementCountFromIdFromUrl,\n  isExistIdFromUrl,\n  removeIdFromUrl,\n} from 'utils/queryStringHeplers';\n\nconst BeerDetails: React.FC<{}> = () => {\n  const { id } = useParams<{ id: string }>();\n  const { search } = useLocation();\n  const item = React.useRef(BeerDetail.create({ ...initialBeer })).current;\n\n  React.useEffect(() => {\n    if (id) {\n      item.loadById(id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return (\n    // eslint-disable-next-line react/jsx-key\n    <Card title={item.name} actions={[<StarOutlined />]}>\n      <div className=\"bread-crumb\">\n        <Breadcrumb>\n          <Breadcrumb.Item key=\"home\">\n            <Link to={routes.main() + search}>Catalog</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item key={id}>\n            <Link to={routes.details(id)}>{item.name}</Link>\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n      {item.dataPending && (\n        <>\n          <Skeleton loading active />\n          <Skeleton loading active />\n        </>\n      )}\n      {item.dataLoadSuccess && (\n        <div className=\"details-container\">\n          <img className=\"details-beer-img\" src={item.image_url} alt={item.name} />\n          <div>\n            <Descriptions className=\"beer-card_description\" title=\"Details\" size=\"middle\" column={2}>\n              <Descriptions.Item label=\"Description\" span={2}>\n                {item.description}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Brewers tips\" span={2}>\n                {item.brewers_tips}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Contributed by\" span={1}>\n                {item.contributed_by}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"First brewed\">{item.first_brewed}</Descriptions.Item>\n              <Descriptions.Item label=\"Food pairing\">\n                {item.food_pairing.map((food: string, i) => (\n                  <span key={food} className=\"food-span\">\n                    {food}\n                    {item.food_pairing.length === i + 1 ? '' : ', '}\n                  </span>\n                ))}\n              </Descriptions.Item>\n              {/** TODO need add ingredients */}\n            </Descriptions>\n            <div className=\"actions-container\">\n              <Link to={routes.details(id) + addIdToUrl(search, id)}>\n                <Button icon={<PlusOutlined />} />\n              </Link>\n              <Link to={routes.details(id) + decrementCountFromIdFromUrl(search, id)}>\n                <Button icon={<MinusOutlined />} />\n              </Link>\n              <Typography className=\"actions-container_item\">{countByIdFromUrl(search, id)}</Typography>\n              {isExistIdFromUrl(search, id) ? (\n                <Link to={routes.details(id) + removeIdFromUrl(search, String(id))}>\n                  <Button className=\"actions-container_item\" icon={<DeleteOutlined />}>\n                    Remove from Card\n                  </Button>\n                </Link>\n              ) : (\n                <Link to={routes.details(id) + addIdToUrl(search, String(id))}>\n                  <Button className=\"actions-container_item\" icon={<PlusCircleOutlined />}>\n                    Add to Card\n                  </Button>\n                </Link>\n              )}\n              <Link to={routes.cart() + search}>\n                <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />}>\n                  Go to Cart\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(BeerDetails);\n","import { Form, Alert, Breadcrumb, Button, Card, Input, Typography } from 'antd';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport routes from 'routes';\nimport Order, { initialValues, OrderFields } from 'models/Order';\nimport { countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport './styles.css';\n\nconst { Title } = Typography;\n\nconst Ordering: React.FC<{}> = () => {\n  const { search } = useLocation();\n\n  const item = React.useRef(Order.create(initialValues)).current;\n\n  const handleChange = (fieldName: OrderFields): React.ChangeEventHandler<HTMLInputElement> => (e) => {\n    item.setField(fieldName, e.target.value);\n  };\n\n  const productsLength = countIdsFromUrl(search);\n\n  return (\n    <Card title=\"Ordering\" className=\"beer-order\">\n      <div className=\"bread-crumb\">\n        <Breadcrumb>\n          <Breadcrumb.Item key=\"home\">\n            <Link to={routes.main() + search}>Catalog</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item key=\"cart\">\n            <Link to={routes.cart() + search}>\n              {productsLength ? `Selected ${productsLength} products in cart` : 'Empty Cart'}\n            </Link>\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n      {!productsLength && <Alert message=\"Products not found\" type=\"info\" />}\n      {productsLength && (\n        <>\n          <div className=\"delivery-information\">\n            <Title level={4}>Delivery info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.city}\n                label=\"City/Town\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.city) && 'Неверный формат'}\n              >\n                <Input placeholder=\"Prague\" value={item.city || ''} onChange={handleChange(OrderFields.city)} />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.street}\n                label=\"Street\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.street) && 'Неверный формат'}\n              >\n                <Input placeholder=\"Parizhska\" value={item.street || ''} onChange={handleChange(OrderFields.street)} />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.houseNumber}\n                label=\"House number\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.houseNumber) && 'Неверный формат'}\n              >\n                <Input\n                  placeholder=\"1\"\n                  value={item.houseNumber || ''}\n                  onChange={handleChange(OrderFields.houseNumber)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"contact-information\">\n            <Title level={4}>Contact info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.name}\n                label=\"Name\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.name) && 'Неверный формат'}\n              >\n                <Input value={item.name || ''} onChange={handleChange(OrderFields.name)} />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.email}\n                label=\"Email\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.email) && 'Неверный формат email'}\n              >\n                <Input\n                  placeholder=\"example@gmai.com\"\n                  value={item.email || ''}\n                  onChange={handleChange(OrderFields.email)}\n                />\n              </Form.Item>\n            </div>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.phone}\n                label=\"Phone\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.phone) && 'Неверный формат номера телефона'}\n              >\n                <Input\n                  placeholder=\"+7-999-000-00-00\"\n                  value={item.phone || ''}\n                  onChange={handleChange(OrderFields.phone)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"contact-information\">\n            <Title level={4}>Payment info</Title>\n            <div className=\"order-field\">\n              <Form.Item\n                name={OrderFields.cardNumber}\n                label=\"card numder\"\n                rules={[{ required: true }]}\n                help={!!item.propertyValidation(OrderFields.cardNumber) && 'Неверный формат карты'}\n              >\n                <Input\n                  placeholder=\"example@gmai.com\"\n                  value={item.city || ''}\n                  onChange={handleChange(OrderFields.cardNumber)}\n                />\n              </Form.Item>\n            </div>\n          </div>\n          <div className=\"cart_button-container\">\n            <Link to={routes.order()}>\n              <Button type=\"primary\">Buy $$$</Button>\n            </Link>\n          </div>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(Ordering);\n","/* eslint-disable react/jsx-key */\nimport * as React from 'react';\n\nimport { Button, Card } from 'antd';\nimport { PlusCircleOutlined, ShoppingCartOutlined, StarOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\nimport routes from 'routes';\n\nimport './styles.css';\nimport { observer } from 'mobx-react';\nimport { IBeer } from 'models/Beer';\nimport { addIdToUrl } from 'utils/queryStringHeplers';\n\ninterface IBeerCardProps {\n  data: IBeer;\n}\n\nconst { Meta } = Card;\n\nconst BeerCard: React.FC<IBeerCardProps> = ({ data }) => {\n  const { search } = useLocation();\n\n  return (\n    <Card\n      title={data.name}\n      actions={[\n        <Button icon={<StarOutlined />} />,\n\n        <Link to={routes.details(String(data.id)) + search}>\n          <Button>Details...</Button>\n        </Link>,\n        <Link to={routes.main() + addIdToUrl(search, String(data.id))}>\n          <Button\n            className=\"beer_add-to-cart\"\n            icon={\n              <>\n                <PlusCircleOutlined /> 1 in\n                <ShoppingCartOutlined />\n              </>\n            }\n          />\n        </Link>,\n        <Link to={routes.cart() + search}>\n          <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />} />\n        </Link>,\n      ]}\n    >\n      <Meta\n        avatar={<img className=\"beer-img\" src={data.image_url} alt={data.name} />}\n        title={data.name}\n        description={data.description}\n      />\n    </Card>\n  );\n};\n\nexport default observer(BeerCard);\n","import * as React from 'react';\n\nimport Search from 'antd/lib/input/Search';\nimport { Button, Card, Col, Row, Skeleton } from 'antd';\nimport { observer } from 'mobx-react';\nimport { BeerCollectionStore } from 'store';\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\nimport routes from 'routes';\nimport { countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport BeerCard from './Card/Card';\nimport './styles.css';\n\nconst MainPage = () => {\n  const { search } = useLocation();\n\n  React.useEffect(() => {\n    BeerCollectionStore.loadAll();\n  }, []);\n\n  return (\n    <div className=\"main-page_container\">\n      <div className=\"main-page_header\">\n        <div className=\"main-page_search_container\">\n          <Search placeholder=\"please input text\" enterButton=\"Search\" size=\"large\" />\n        </div>\n        {!!countIdsFromUrl(search) && (\n          <Link to={routes.cart() + search}>\n            <Button className=\"actions-container_item\" icon={<ShoppingCartOutlined />}>\n              In Cart {countIdsFromUrl(search)} items\n            </Button>\n          </Link>\n        )}\n      </div>\n      <Row>\n        {BeerCollectionStore.dataPending &&\n          new Array(12).fill({}).map((item, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Col key={i} className=\"main-page_beer-list_col\" span={8}>\n              <Card>\n                <Skeleton loading avatar active />\n              </Card>\n            </Col>\n          ))}\n        {BeerCollectionStore.dataLoadSuccess &&\n          BeerCollectionStore.items.toJSON().map((beer) => (\n            <Col key={beer.id} className=\"main-page_beer-list_col\" span={8}>\n              <BeerCard data={beer} />\n            </Col>\n          ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default observer(MainPage);\n","import * as React from 'react';\n\nimport { CartStore } from 'store';\n\nconst useLoadPruductByQueryUrl = (search: string) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  React.useEffect(() => {\n    const queryArray = (search && search.split('?')[1].split('&')) || [];\n\n    let ids: string = '';\n    const counts: number[] = [];\n    queryArray.forEach((param, i) => {\n      const [key, value] = param.split('=');\n      ids += `${key}${i < queryArray.length ? '|' : ''}`;\n      counts.push(+value);\n    });\n\n    CartStore.loadByIds(ids).then(() => {\n      CartStore.items.forEach((item, i) => {\n        item.setCount(counts[i]);\n      });\n    });\n  }, [search]);\n};\n\nexport default useLoadPruductByQueryUrl;\n","import { Alert, Breadcrumb, Button, Card, Descriptions, Skeleton, Typography } from 'antd';\nimport useLoadPruductByQueryUrl from 'hooks/loadPruductByQueryUrl';\nimport { observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport routes from 'routes';\nimport { CartStore } from 'store';\nimport { countByIdFromUrl, getTotalCount, removeIdFromUrl, countIdsFromUrl } from 'utils/queryStringHeplers';\n\nimport './styles.css';\n\nconst { Title } = Typography;\n\nconst DEFAULT_PRICE = 3.5;\n\nconst BeerCart: React.FC<{}> = () => {\n  const { search } = useLocation();\n\n  useLoadPruductByQueryUrl(search);\n\n  const totalCount = getTotalCount(search);\n\n  const productsLength = countIdsFromUrl(search);\n\n  return (\n    <Card title=\"Cart\" className=\"beer-cart\">\n      <div className=\"bread-crumb\">\n        <Breadcrumb>\n          <Breadcrumb.Item key=\"home\">\n            <Link to={routes.main() + search}>Catalog</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item key=\"cart\">\n            <Link to={routes.cart() + search}>Cart</Link>\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n      {CartStore.dataPending && (\n        <>\n          <Skeleton loading active />\n          <Skeleton loading active />\n          <Skeleton loading active />\n        </>\n      )}\n      {CartStore.dataLoadSuccess && !productsLength && <Alert message=\"Empty Cart\" type=\"info\" />}\n      {CartStore.dataLoadSuccess && !!productsLength && (\n        <>\n          {CartStore.items.map((item, i) => (\n            <React.Fragment key={item.id}>\n              <div className=\"card_item-container\">\n                <img className=\"cart-beer-img\" src={item.image_url} alt={item.name} />\n                <div>\n                  <Descriptions\n                    className=\"cart_item_description\"\n                    title={`${i + 1}. ${item.name}`}\n                    size=\"middle\"\n                    column={2}\n                  >\n                    <Descriptions.Item label=\"Description\" span={2}>\n                      {item.description}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"count\">{countByIdFromUrl(search, String(item.id))}</Descriptions.Item>\n                    <Descriptions.Item label=\"price\">\n                      {DEFAULT_PRICE * countByIdFromUrl(search, String(item.id))} $\n                    </Descriptions.Item>\n                  </Descriptions>\n                  <div className=\"cart_item_actions\">\n                    <Link to={routes.details(item.id.toString()) + search}>\n                      <Button className=\"cart_item_first_btn\">Details</Button>\n                    </Link>\n                    <Link to={routes.cart() + removeIdFromUrl(search, String(item.id))}>\n                      <Button>Remove</Button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </React.Fragment>\n          ))}\n          <Title level={4}>TOTAL: {totalCount * DEFAULT_PRICE} $</Title>\n          {CartStore.items.toJSON().length && (\n            <div className=\"cart_button-container\">\n              <Link to={routes.order() + search}>\n                <Button type=\"primary\">Go to ordering</Button>\n              </Link>\n            </div>\n          )}\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default observer(BeerCart);\n","import React from 'react';\n\nimport { Layout } from 'antd';\n\nimport BeerMenu from 'components/menu';\nimport BeerDetails from 'pages/detail';\nimport Ordering from 'pages/ordering';\nimport MainPage from 'pages/main';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport routes from 'routes';\nimport BeerCart from 'pages/cart';\n\nimport './App.css';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nexport default function App() {\n  return (\n    <Layout>\n      <Header className=\"header\">\n        <div className=\"logo\" />\n        Beans Love Beers\n      </Header>\n      <Content>\n        {/** breabCrumbs */}\n        <Layout className=\"site-layout-background\">\n          <Sider className=\"site-layout-background\" width={200}>\n            <BeerMenu />\n          </Sider>\n          <Content style={{ padding: '0 24px', minHeight: 280 }}>\n            <Switch>\n              <Route exact path={routes.main()}>\n                <MainPage />\n              </Route>\n              <Route path={routes.details()}>\n                <BeerDetails />\n              </Route>\n              <Route path={routes.cart()}>\n                <BeerCart />\n              </Route>\n              <Route path={routes.order()}>\n                <Ordering />\n              </Route>\n            </Switch>\n          </Content>\n        </Layout>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Beer Catalog developed by Igor Bezdeneznhykh</Footer>\n    </Layout>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}